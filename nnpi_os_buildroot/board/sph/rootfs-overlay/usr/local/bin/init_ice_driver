#! /bin/sh

#############################
# The output results go to /tmp/Test_all_ICEs.log
# This is for debug SW. For Release, need to remove  ice_fw_select=1  from all lines
# Can add more tests, but then for each test need to add the 4 lines which update the good_ICE
#############################
# set -x
FLAVOR=$1
if [ "${FLAVOR}" = "Debug" ]
then
   INTEL_NNPI_COMMON_ARGS="ice_fw_select=1 sph_soc=1"
else
   INTEL_NNPI_COMMON_ARGS="sph_soc=1"
fi

TEST_BOOT_ID="ls /dev/disk/by-id >/dev/null 2>&1"
TEST_VTECH="Vtech"

#############################
# Return 0 if the system is running in a simulator, otherwise return 1.
#############################
is_simics() {
        # Poll boot-disk-id for vtech boot drive
        RES=$(${TEST_BOOT_ID})
        if [ "$RES" != "${RES%$TEST_VTECH*}" ]; then echo 0; else echo 1; fi
}

check_cpu_stepping() {
        a=`cat /proc/cpuinfo | grep stepping | awk '{print $3}' `
        A="$(echo $a | cut -d' ' -f2)"
        if [ $A -eq 0 ]
        then
            echo "this is NNPI A step SOC"
            STEP='a_step'
        elif [ $A -eq 1 ]
        then
            echo "this is NNPI B step SOC"
            STEP='b_step'
        elif [ $A -eq 2 ]
        then
            echo "this is NNPI C step SOC"
            STEP='c_step'
        else
            echo "Not a valid SOC step"
            STEP='NO_Step'
        fi
}        

#############################
# Enumerate ICEs to check for faulty cores
#############################
check_ices() {
        echo "Start " > /tmp/Test_all_ICEs.log
	      check_cpu_stepping
        if [ $STEP != 'a_step' ] && [ $STEP != 'b_step' ]
        then
            echo "*********************************************"
            echo "*        skiping ice screening test         *" 
            echo "*********************************************"
            return 0
        fi 
        i=0
        while [ $i -le 11 ]
        do
                mask=$(printf "0x%X\n" $((0xFFF - (1<<i))));
#               echo $mask

                INTEL_NNPI_ARGS="${INTEL_NNPI_COMMON_ARGS} icemask_user=$mask"
                modprobe intel_nnpi.ko $INTEL_NNPI_ARGS
		if [ $? !=  0 ]
		then
			echo "Failed to insmod intel_nnpi driver - aborting!"
			exit 1
		fi
#               echo "loaded intel_nnpi with args: $INTEL_NNPI_ARGS"
                good_ICE=1
                j=0
                while [ $j -le 0 ]
                do
                        j=$(( j + 1 ))
#                       echo "-------           *       *       *   Ice# = $i     Mask = $mask   Run = $j       *       *       *"

                        # Can put multiple tests here:
                        /opt/intel_nnpi/tests/driver/driver_test --gtest_filter="*1_ctxt_1_createIR_1_exeIR/0" --scenarios_path /opt/intel_nnpi/tests/driver/scenarios/${STEP} --scenario ivp_complement_dl --num_ice 1 > /dev/null
                        pass_test1=$?
#                       echo "Ice# = $i Run# = $j test #1 = $pass_test1" >>/tmp/Test_all_ICEs.log

                        /opt/intel_nnpi/tests/driver/driver_test --gtest_filter="*1_ctxt_1_createIR_1_exeIR/0" --scenarios_path /opt/intel_nnpi/tests/driver/scenarios/${STEP} --scenario conv1 --num_ice 1 > /dev/null
                        pass_test2=$?
#                       echo "Ice# = $i Run# = $j test #2 = $pass_test2" >>/tmp/Test_all_ICEs.log

                        /opt/intel_nnpi/tests/driver/driver_test --gtest_filter="*1_ctxt_1_createIR_multi_exeIR/0" --scenarios_path /opt/intel_nnpi/tests/driver/scenarios/${STEP} --scenario resnet50_5layers --num_ice 1 > /dev/null
                        pass_test3=$?
#                       echo "Ice# = $i Run# = $j test #3 = $pass_test3" >>/tmp/Test_all_ICEs.log

                        /opt/intel_nnpi/tests/driver/driver_test --gtest_filter="*1_ctxt_1_createIR_multi_exeIR/0" --scenarios_path /opt/intel_nnpi/tests/driver/scenarios/${STEP} --scenario ivp_add_b0_dl --num_ice 1 > /dev/null
                        pass_test4=$?
#                       echo "Ice# = $i Run# = $j test #4 = $pass_test4" >>/tmp/Test_all_ICEs.log

                        if [ $pass_test1 != 0 ] || [ $pass_test2 != 0 ] || [ $pass_test3 != 0 ] || [ $pass_test4 != 0 ]
                        then
                            good_ICE=0
                        fi
                done
                if [ "$good_ICE" -eq 0 ]
                then
                   echo "Ice #$i masked"
                   mask_ICE_i=$(( 1<<i ))
                   mask_after=$(( $mask_after + $mask_ICE_i ))
                fi

                rmmod intel_nnpi
                i=$(( i + 1 ))
        done
}

mask_after=0

if [ "$(is_simics)" -eq 0 ]
then
        echo "Detected Vtech Boot Disk IDs:\n $(${TEST_BOOT_ID}) \nRunning on simulator - skip ICE detection"
else
        check_ices
fi

mask_new=$(printf "0x%X\n" $mask_after)
INTEL_NNPI_ARGS="${INTEL_NNPI_COMMON_ARGS} icemask_user=$mask_new"
modprobe intel_nnpi.ko ${INTEL_NNPI_ARGS}
echo "loaded intel_nnpi with args: ${INTEL_NNPI_ARGS}" >> /tmp/Test_all_ICEs.log
echo "loaded intel_nnpi with args: ${INTEL_NNPI_ARGS}"

