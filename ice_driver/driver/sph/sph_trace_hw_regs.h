/*
 * NNP-I Linux Driver
 * Copyright (c) 2019, Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU General Public License,
 * version 2, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 */
#ifndef _SPH_TRACE_HW_REGS_H_
#define _SPH_TRACE_HW_REGS_H_

#define MTB_LBAR_OFFSET    0x10
#define MTB_LBAR_SIZE    0x100000
#define REG_MSU_MSC0BAR    0xA0108
#define INTEL_TH_PCI_DEVICE_ID 0x45c5
#define SR_PAGE_SIZE 0x400

#include "ice_obs_dtf_obs_enc_regs_regs.h" /*TODO:enable with coral release */
#include "ice_mmu_inner_regs.h"
#include "map_GeCoE_Core_regs.h"
#include "cve_cbbid.h"
#include "cve_delphi_cfg_regs.h"

#define MMU_ATU0_MISSES ICE_MMU_BASE + ICE_MMU_ATU_MISSES_MMOFFSET
#define MMU_ATU1_MISSES ICE_MMU_BASE + ICE_MMU_ATU_MISSES_MMOFFSET + 4
#define MMU_ATU2_MISSES ICE_MMU_BASE + ICE_MMU_ATU_MISSES_MMOFFSET + 8
#define MMU_ATU3_MISSES ICE_MMU_BASE + ICE_MMU_ATU_MISSES_MMOFFSET + 12
#define ATU0_TRANSACTIONS ICE_MMU_BASE + ICE_MMU_ATU_TRANSACTIONS_MMOFFSET
#define ATU1_TRANSACTIONS ICE_MMU_BASE + ICE_MMU_ATU_TRANSACTIONS_MMOFFSET + 4
#define ATU2_TRANSACTIONS ICE_MMU_BASE + ICE_MMU_ATU_TRANSACTIONS_MMOFFSET + 8
#define ATU3_TRANSACTIONS ICE_MMU_BASE + ICE_MMU_ATU_TRANSACTIONS_MMOFFSET + 12
#define READ_ISSUED ICE_MMU_BASE + ICE_MMU_READ_ISSUED_MMOFFSET
#define WRITE_ISSUED ICE_MMU_BASE + ICE_MMU_WRITE_ISSUED_MMOFFSET
#define GECOE_DEC_PARTIAL_ACCESS_COUNT \
	CBBID_GECOE_OFFSET + CVE_GECOE_GECOE_DEC_PARTIAL_ACCESS_COUNT_MMOFFSET
#define GECOE_ENC_PARTIAL_ACCESS_COUNT \
	CBBID_GECOE_OFFSET + CVE_GECOE_GECOE_ENC_PARTIAL_ACCESS_COUNT_MMOFFSET
#define GECOE_DEC_META_MISS_COUNT \
	CBBID_GECOE_OFFSET + CVE_GECOE_GECOE_DEC_META_MISS_COUNT_MMOFFSET
#define GECOE_ENC_UNCOM_MODE_COUNT \
	CBBID_GECOE_OFFSET + CVE_GECOE_GECOE_ENC_UNCOM_MODE_COUNT_MMOFFSET
#define GECOE_ENC_NULL_MODE_COUNT \
	CBBID_GECOE_OFFSET + CVE_GECOE_GECOE_ENC_NULL_MODE_COUNT_MMOFFSET
#define GECOE_ENC_SM_MODE_COUNT \
	CBBID_GECOE_OFFSET + CVE_GECOE_GECOE_ENC_SM_MODE_COUNT_MMOFFSET
#define DELPHI_PERF_CNT_1_REG \
	CVE_DELPHI_BASE + CVE_DELPHI_DELPHI_DBG_PERF_CNT_1_REG_MMOFFSET
#define DELPHI_PERF_CNT_2_REG \
	CVE_DELPHI_BASE + CVE_DELPHI_DELPHI_DBG_PERF_CNT_2_REG_MMOFFSET
#define RESET 0
const u8 icebo_port_lookup[] = {0x0a, 0x0e, 0x12, 0x16, 0x1a, 0x1e};
#define NUM_ICE_BO 6

const u16 dso_reg_offsets[MAX_DSO_CONFIG_REG] = {
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_ENC_MEM_REGS_DSO_DTF_ENCODER_CONFIG_REG_MMOFFSET/*0x0004*/, /* DSO_DTF_ENCODER_CONFIG_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_CFG_DTF_SRC_CONFIG_REG_MMOFFSET/*0x0014*/, /* DSO_CFG_DTF_SRC_CONFIG_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_CFG_PTYPE_FILTER_CH0_REG_MMOFFSET/*0x0018*/, /* DSO_CFG_PTYPE_FILTER_CH0_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MATCH_LOW_CH0_REG_MMOFFSET/*0x001c*/, /* DSO_FILTER_MATCH_LOW_CH0_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MATCH_HIGH_CH0_REG_MMOFFSET/*0x0020*/, /* DSO_FILTER_MATCH_HIGH_CH0_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MASK_LOW_CH0_REG_MMOFFSET/*0x0024*/, /* DSO_FILTER_MASK_LOW_CH0_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MASK_HIGH_CH0_REG_MMOFFSET/*0x0028*/, /* DSO_FILTER_MASK_HIGH_CH0_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_INV_CH0_REG_MMOFFSET/*0x002c*/, /* DSO_FILTER_INV_CH0_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_CFG_PTYPE_FILTER_CH1_REG_MMOFFSET/*0x0030*/, /* DSO_CFG_PTYPE_FILTER_CH1_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MATCH_LOW_CH1_REG_MMOFFSET/*0x0034*/, /* DSO_FILTER_MATCH_LOW_CH1_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MATCH_HIGH_CH1_REG_MMOFFSET/*0x0038*/, /* DSO_FILTER_MATCH_HIGH_CH1_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MASK_LOW_CH1_REG_MMOFFSET/*0x003c*/, /* DSO_FILTER_MASK_LOW_CH1_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_MASK_HIGH_CH1_REG_MMOFFSET/*0x0040*/, /* DSO_FILTER_MASK_HIGH_CH1_REG */
			ICE_OBS_ENC_REGS_ICE_OBS_DSO_DTF_OBS_MEM_REGS_DSO_FILTER_INV_CH1_REG_MMOFFSET/*0x0044*/, /* DSO_FILTER_INV_CH1_REG */
			};

const u32 default_dso_reg_vals[MAX_DSO_CONFIG_REG] = {
			  0x00000000, /* DSO_DTF_ENCODER_CONFIG_REG */
			  0x40078780, /* DSO_CFG_DTF_SRC_CONFIG_REG */
			  0x00000000, /* DSO_CFG_PTYPE_FILTER_CH0_REG */
			  0x00000000, /* DSO_FILTER_MATCH_LOW_CH0_REG */
			  0x00000000, /* DSO_FILTER_MATCH_HIGH_CH0_REG */
			  0x00000000, /* DSO_FILTER_MASK_LOW_CH0_REG */
			  0x00000000, /* DSO_FILTER_MASK_HIGH_CH0_REG */
			  0x00000000, /* DSO_FILTER_INV_CH0_REG */
			  0x00000000, /* DSO_CFG_PTYPE_FILTER_CH1_REG */
			  0x00000000, /* DSO_FILTER_MATCH_LOW_CH1_REG */
			  0x00000000, /* DSO_FILTER_MATCH_HIGH_CH1_REG */
			  0x00000000, /* DSO_FILTER_MASK_LOW_CH1_REG */
			  0x00000000, /* DSO_FILTER_MASK_HIGH_CH1_REG */
			  0x00000000  /* DSO_FILTER_INV_CH1_REG */
			};

/* Any change in enum value would impact the functioanlity */
enum dso_reg_index {
		 DSO_DTF_ENCODER_CONFIG_REG_INDEX = 0,
		 DSO_CFG_DTF_SRC_CONFIG_REG_INDEX = 1,
		 DSO_CFG_PTYPE_FILTER_CH0_REG_INDEX = 2,
		 DSO_FILTER_MATCH_LOW_CH0_REG_INDEX = 3,
		 DSO_FILTER_MATCH_HIGH_CH0_REG_INDEX = 4,
		 DSO_FILTER_MASK_LOW_CH0_REG_INDEX = 5,
		 DSO_FILTER_MASK_HIGH_CH0_REG_INDEX = 6,
		 DSO_FILTER_INV_CH0_REG_INDEX = 7,
		 DSO_CFG_PTYPE_FILTER_CH1_REG_INDEX = 8,
		 DSO_FILTER_MATCH_LOW_CH1_REG_INDEX = 9,
		 DSO_FILTER_MATCH_HIGH_CH1_REG_INDEX = 10,
		 DSO_FILTER_MASK_LOW_CH1_REG_INDEX = 11,
		 DSO_FILTER_MASK_HIGH_CH1_REG_INDEX = 12,
		 DSO_FILTER_INV_CH1_REG_INDEX = 13
		};
/*TODO: reg offset should come from hw header files? */
#define MAX_PMON_DAEMON 19
const u32 pmon_config_regoffset_array[MAX_PMON_DAEMON] = {
	RESET,
	MMU_ATU0_MISSES,
	MMU_ATU1_MISSES, 
	MMU_ATU2_MISSES,
	MMU_ATU3_MISSES,
	ATU0_TRANSACTIONS,
	ATU1_TRANSACTIONS,
	ATU2_TRANSACTIONS,
	ATU3_TRANSACTIONS,
	READ_ISSUED,
	WRITE_ISSUED,
	GECOE_DEC_PARTIAL_ACCESS_COUNT,
	GECOE_ENC_PARTIAL_ACCESS_COUNT,
	GECOE_DEC_META_MISS_COUNT,
	GECOE_ENC_UNCOM_MODE_COUNT,
	GECOE_ENC_NULL_MODE_COUNT,
	GECOE_ENC_SM_MODE_COUNT,
	DELPHI_PERF_CNT_1_REG,
	DELPHI_PERF_CNT_2_REG
	};
#endif /*_SPH_TRACE_HW_REGS_H_*/
