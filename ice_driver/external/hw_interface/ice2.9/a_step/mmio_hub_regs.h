/*******************************************************************************
INTEL CORPORATION CONFIDENTIAL Copyright(c) 2015-2019 Intel Corporation. All Rights Reserved.

The source code contained or described herein and all documents related to the
source code ("Material") are owned by Intel Corporation or its suppliers or
licensors. Title to the Material remains with Intel Corporation or its suppliers
and licensors. The Material contains trade secrets and proprietary and
confidential information of Intel or its suppliers and licensors. The Material
is protected by worldwide copyright and trade secret laws and treaty provisions.
No part of the Material may be used, copied, reproduced, modified, published,
uploaded, posted, transmitted, distributed, or disclosed in any way without
Intel's prior express written permission.

No license under any patent, copyright, trade secret or other intellectual
property right is granted to or conferred upon you by disclosure or delivery of
the Materials, either expressly, by implication, inducement, estoppel or
otherwise. Any license under such intellectual property rights must be express
and approved by Intel in writing.
*******************************************************************************/

#ifndef _MMIO_HUB_REGS_H_
#define _MMIO_HUB_REGS_H_
#define CVE_MMIO_HUB_BASE 0x0
#define CVE_MMIO_HUB_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_MMOFFSET 0x0
#define CVE_MMIO_HUB_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_MMOFFSET 0x4
#define CVE_MMIO_HUB_NEW_COMMAND_BUFFER_DOOR_BELL_MMOFFSET 0x8
#define CVE_MMIO_HUB_STOP_TLC_DOOR_BELL_MMOFFSET 0x0C
#define CVE_MMIO_HUB_GENERAL_PURPOSE_DOORBELL_MMOFFSET 0x10
#define CVE_MMIO_HUB_HW_REVISION_MMOFFSET 0x100
#define CVE_MMIO_HUB_INTERRUPT_MASK_MMOFFSET 0x104
#define CVE_MMIO_HUB_INTERRUPT_STATUS_MMOFFSET 0x108
#define CVE_MMIO_HUB_INTERRUPT_STATUS_SHADOW_MMOFFSET 0x10C
#define CVE_MMIO_HUB_TLC_WR_PULSE_MMOFFSET 0x110
#define CVE_MMIO_HUB_P_WAIT_MODE_MMOFFSET 0x114
#define CVE_MMIO_HUB_DEEPSRAM_CONFIG_MMOFFSET 0x118
#define CVE_MMIO_HUB_DEEPSRAM_CLEAR_MMOFFSET 0x11C
#define CVE_MMIO_HUB_CVE_CONFIG_MMOFFSET 0x120
#define CVE_MMIO_HUB_PRE_IDLE_DELAY_COUNT_MMOFFSET 0x124
#define CVE_MMIO_HUB_CBB_ERROR_CODE_MMOFFSET 0x128
#define CVE_MMIO_HUB_CBB_ERROR_INFO_MMOFFSET 0x12C
#define CVE_MMIO_HUB_PROG_CORES_CONTROL_MMOFFSET 0x130
#define CVE_MMIO_HUB_TLC_INFO_MMOFFSET 0x134
#define CVE_MMIO_HUB_CVE_CLOCK_GATING_WAIT_CNT_MMOFFSET 0x138
#define CVE_MMIO_HUB_CVE_CLOCK_GATING_DISABLE_MMOFFSET 0x13C
#define CVE_MMIO_HUB_CVE_BREAK_NETWORK_CNTL_MMOFFSET 0x140
#define CVE_MMIO_HUB_DTF_CONTROL_MMOFFSET 0x144
#define CVE_MMIO_HUB_DTF_SRC_FILTER_MMOFFSET 0x148
#define CVE_MMIO_HUB_DTF_DST_FILTER_MMOFFSET 0x150
#define CVE_MMIO_HUB_MMIO_CNC_READ_WD_MMOFFSET 0x158
#define CVE_MMIO_HUB_GENERAL_PURPOSE_REGS_MMOFFSET 0x15C
#define CVE_MMIO_HUB_TLC_MAILBOX_MMOFFSET 0x1DC
#define CVE_MMIO_HUB_CVE_GPO_MMOFFSET 0x1EC
#define CVE_MMIO_HUB_CVE_WATCHDOG_INIT_MMOFFSET 0x1F0
#define CVE_MMIO_HUB_CVE_SECONDARY_WATCHDOG_INIT_MMOFFSET 0x1F4
#define CVE_MMIO_HUB_CVE_CNC_WATCHDOG_INIT_MMOFFSET 0x1F8
#define CVE_MMIO_HUB_CVE_ID_MMOFFSET 0x1FC
#define CVE_MMIO_HUB_HOST2TLC_INTERRUPT_MMOFFSET 0x200
#define CVE_MMIO_HUB_HOST2ASIP_INTERRUPT_MMOFFSET 0x204
#define CVE_MMIO_HUB_HOST2IVP_INTERRUPT_MMOFFSET 0x208
#define CVE_MMIO_HUB_MMIO_NOTIFICATION_MMOFFSET 0x20C
#define CVE_MMIO_HUB_PARITY_LOW_ERR_MMOFFSET 0x210
#define CVE_MMIO_HUB_PARITY_HIGH_ERR_MMOFFSET 0x214
#define CVE_MMIO_HUB_PARITY_LOW_ERR_MASK_MMOFFSET 0x218
#define CVE_MMIO_HUB_PARITY_HIGH_ERR_MASK_MMOFFSET 0x21C
#define CVE_MMIO_HUB_PARITY_ERRCOUNT_MMOFFSET 0x220
#define CVE_MMIO_HUB_ECC_SERRCOUNT_MMOFFSET 0x224
#define CVE_MMIO_HUB_ECC_DERRCOUNT_MMOFFSET 0x228
#define CVE_MMIO_HUB_UNMAPPED_ERR_ID_MMOFFSET 0x22C
#ifndef MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_FLAG
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_FLAG

/*  COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS desc:  Power Domain : CVE */
/* Gated Reset Domain : CVE Reset Function Domain : */

/*  CVE Doorbell DOORBELL : driver : a door-bell to enable TLC to */
/* cache */
/* base addresses of Command Descriptors array[br] DOORBELL*/
union MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_t {
	struct {
uint32_t  data                 :  32;    /*  Doorbell Message*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_OFFSET 0x00
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_SCOPE 0x01
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_SIZE 32
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_RESET 0x00000000
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_DATA_LSB 0x0000
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_DATA_MSB 0x001f
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_FLAG
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_FLAG

/*  COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR desc:  Power Domain : CVE */
/* Gated Reset Domain : CVE Reset Function Domain : */
/* CVE Doorbell DOORBELL number of entries in the*/
/* Command-Buffer-Descriptors array. DOORBELL*/
union MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_t {
	struct {
uint32_t  data                 :  32;    /*  Doorbell Message*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_OFFSET 0x04
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_SCOPE 0x01
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_SIZE 32
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_RESET 0x00000000
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_DATA_LSB 0x0000
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_DATA_MSB 0x001f
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_FLAG
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_FLAG

/*  NEW_COMMAND_BUFFER_DOOR_BELL desc:  Power Domain : CVE Gated Reset */
/* Domain : CVE Reset Function Domain : */

/*  CVE Doorbell DOORBELL driver : index in the FIFO : points at where */
/* the */

/*  next descriptor will be inserted.[br] the driver increments this */
/* */

/*  register whenever it adds a descriptor to the FIFO.[br] the TLC is */
/* */
/* notified whenever the driver changes it.*/
union MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_t {
	struct {
uint32_t  data                 :  32;    /*  Doorbell Message*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_OFFSET 0x08
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_SCOPE 0x01
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_SIZE 32
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_RESET 0x00000000
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_DATA_LSB 0x0000
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_DATA_MSB 0x001f
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_FLAG
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_FLAG

/*  STOP_TLC_DOOR_BELL desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Doorbell DOORBELL driver : a door-bell instructing TLC to stop */
/* */

/*  execution and reset FIFO state after the completion of [br] the */
/* */
/* nearest CB marked as is_end_of_group*/
union MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_t {
	struct {
uint32_t  data                 :  32;    /*  Doorbell Message*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_OFFSET 0x0c
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_SCOPE 0x01
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_SIZE 32
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_RESET 0x00000000
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_DATA_LSB 0x0000
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_DATA_MSB 0x001f
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_FLAG
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_FLAG

/*  GENERAL_PURPOSE_DOORBELL desc:  Power Domain : CVE Gated Reset */
/* Domain : CVE Reset Function Domain : */
/* CVE Doorbell*/
union MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_t {
	struct {
uint32_t  data                 :  32;    /*  Doorbell Message*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_OFFSET 0x10
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_SCOPE 0x01
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_SIZE 32
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_RESET 0x00000000
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_DATA_LSB 0x0000
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_DATA_MSB 0x001f
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_HW_REVISION_FLAG
#define MMIO_HUB_MEM_HW_REVISION_FLAG

/*  HW_REVISION desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */

/*  CVE Info hw: a read-only register. The HW writes the revision */
/* numbers */
/* in it [br]*/
union MMIO_HUB_MEM_HW_REVISION_t {
	struct {
uint32_t  major_rev            :  16;
/*   Major revision - same value */
/* as the RevisionID field in the*/
/* PCI config register 0x08*/
uint32_t  minor_rev            :  16;    /*  Minor revision*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_HW_REVISION_OFFSET 0x00
#define MMIO_HUB_MEM_HW_REVISION_SCOPE 0x01
#define MMIO_HUB_MEM_HW_REVISION_SIZE 32
#define MMIO_HUB_MEM_HW_REVISION_BITFIELD_COUNT 0x02
#define MMIO_HUB_MEM_HW_REVISION_RESET 0x00000000
#define MMIO_HUB_MEM_HW_REVISION_MAJOR_REV_LSB 0x0000
#define MMIO_HUB_MEM_HW_REVISION_MAJOR_REV_MSB 0x000f
#define MMIO_HUB_MEM_HW_REVISION_MAJOR_REV_RANGE 0x0010
#define MMIO_HUB_MEM_HW_REVISION_MAJOR_REV_MASK 0x0000ffff
#define MMIO_HUB_MEM_HW_REVISION_MAJOR_REV_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_HW_REVISION_MINOR_REV_LSB 0x0010
#define MMIO_HUB_MEM_HW_REVISION_MINOR_REV_MSB 0x001f
#define MMIO_HUB_MEM_HW_REVISION_MINOR_REV_RANGE 0x0010
#define MMIO_HUB_MEM_HW_REVISION_MINOR_REV_MASK 0xffff0000
#define MMIO_HUB_MEM_HW_REVISION_MINOR_REV_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_INTERRUPT_MASK_FLAG
#define MMIO_HUB_MEM_INTERRUPT_MASK_FLAG

/*  INTERRUPT_MASK desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */

/*  CVE Interrupt driver : interrupt mask. an interrupt is masked if */
/* the */
/* corresponding bit is 1.*/
union MMIO_HUB_MEM_INTERRUPT_MASK_t {
	struct {
uint32_t  TLC_CB_COMPLETED     :   1;
/*   Mask TLC CB Completed */
/* Interrupt*/
uint32_t  TLC_FIFO_EMPTY       :   1;
/*   Mask TLC FIFO Empty Interrupt */
uint32_t  TLC_ERROR            :   1;
/*   Mask TLC Error Interrupt */
uint32_t  MMU_COMPLETED        :   1;
/*   Mask MMU Completed Interrupt */
uint32_t  MMU_ERROR            :   1;
/*   Mask MMU Error Interrupt */
uint32_t  DUMP_COMPLETED       :   1;
/*   Mask TLC DUMP_COMPLETED */
/* Interrupt*/
uint32_t  TLC_PANIC            :   1;
/*   Mask TLC PANIC Interrupt */
uint32_t  TLC_RESERVED         :   8;    /*  Mask TLC Reserved*/
uint32_t  MASK_RESERVED        :   1;    /*  Mask Reserved*/
uint32_t  MMU_PAGE_NO_WRITE_PERMISSION :   1;
/*   Mask MMU No write permission */
/* on page while attempting to*/
/* perform write*/
uint32_t  MMU_PAGE_NO_READ_PERMISSION :   1;
/*   Mask MMU No read permission */
/* on page while attempting to*/
/* perform read*/
uint32_t  MMU_PAGE_NO_EXECUTE_PERMISSION :   1;
/*   Mask MMU No execute */
/* permission on page while*/
/* attempting to perform*/
/* instruction read/execute*/
uint32_t  MMU_PAGE_NONE_PERMISSION :   1;
/*   Mask MMU Zero permission on */
/* page while attempting to*/
/* write/read*/
uint32_t  MMU_SOC_BUS_ERROR    :   1;
/*   Mask MMU OCP bus error result */
uint32_t  ASIP2HOST_INT        :   1;
/*   Mask ASIP2HOST Interrupt */
uint32_t  IVP2HOST_INT         :   1;
/*   Mask IVP2HOST Interrupt */
uint32_t  INTERNAL_CVE_WATCHDOG_INTERRUPT :   1;
/*   Mask INTERNAL CVE Watchdog */
/* Interrupt*/
uint32_t  BTRS_CVE_WATCHDOG_INTERRUPT :   1;
/*   Mask BTRS CVE Watchdog */
/* Interrupt*/
uint32_t  INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT :   1;
/*   Mask INTERNAL CVE Secondary */
/* Watchdog Interrupt*/
uint32_t  INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT :   1;
/*   Mask INTERNAL CVE CnC */
/* Watchdog Interrupt*/
uint32_t  DSRAM_SINGLE_ERR_INTERRUPT :   1;
/*   Mask Signals a single Error */
/* in the DeepSRAM*/
uint32_t  DSRAM_DOUBLE_ERR_INTERRUPT :   1;
/*   Mask Signals souble Error in */
/* the DeepSRAM*/
uint32_t  SRAM_PARITY_ERR_INTERRUPT :   1;
/*   Mask Parity Error in one of */
/* the SRAMs*/
uint32_t  DSRAM_UNMAPPED_ADDR_INTERRUPT :   1;
/*   Mask DeepSRAM interrupt due */
/* to access to unmamped address*/
uint32_t  RSVD_0               :   1;
/*  Nebulon auto filled RSVD [31:31] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_INTERRUPT_MASK_OFFSET 0x04
#define MMIO_HUB_MEM_INTERRUPT_MASK_SCOPE 0x01
#define MMIO_HUB_MEM_INTERRUPT_MASK_SIZE 32
#define MMIO_HUB_MEM_INTERRUPT_MASK_BITFIELD_COUNT 0x18
#define MMIO_HUB_MEM_INTERRUPT_MASK_RESET 0x7fffffff
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_CB_COMPLETED_LSB 0x0000
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_CB_COMPLETED_MSB 0x0000
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_CB_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_CB_COMPLETED_MASK 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_CB_COMPLETED_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_FIFO_EMPTY_LSB 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_FIFO_EMPTY_MSB 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_FIFO_EMPTY_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_FIFO_EMPTY_MASK 0x00000002
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_FIFO_EMPTY_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_ERROR_LSB 0x0002
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_ERROR_MSB 0x0002
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_ERROR_MASK 0x00000004
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_ERROR_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_COMPLETED_LSB 0x0003
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_COMPLETED_MSB 0x0003
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_COMPLETED_MASK 0x00000008
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_COMPLETED_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_ERROR_LSB 0x0004
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_ERROR_MSB 0x0004
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_ERROR_MASK 0x00000010
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_ERROR_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DUMP_COMPLETED_LSB 0x0005
#define MMIO_HUB_MEM_INTERRUPT_MASK_DUMP_COMPLETED_MSB 0x0005
#define MMIO_HUB_MEM_INTERRUPT_MASK_DUMP_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DUMP_COMPLETED_MASK 0x00000020
#define MMIO_HUB_MEM_INTERRUPT_MASK_DUMP_COMPLETED_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_PANIC_LSB 0x0006
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_PANIC_MSB 0x0006
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_PANIC_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_PANIC_MASK 0x00000040
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_PANIC_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_RESERVED_LSB 0x0007
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_RESERVED_MSB 0x000e
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_RESERVED_RANGE 0x0008
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_RESERVED_MASK 0x00007f80
#define MMIO_HUB_MEM_INTERRUPT_MASK_TLC_RESERVED_RESET_VALUE 0x000000ff
#define MMIO_HUB_MEM_INTERRUPT_MASK_MASK_RESERVED_LSB 0x000f
#define MMIO_HUB_MEM_INTERRUPT_MASK_MASK_RESERVED_MSB 0x000f
#define MMIO_HUB_MEM_INTERRUPT_MASK_MASK_RESERVED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MASK_RESERVED_MASK 0x00008000
#define MMIO_HUB_MEM_INTERRUPT_MASK_MASK_RESERVED_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_WRITE_PERMISSION_LSB 0x0010
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_WRITE_PERMISSION_MSB 0x0010
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_WRITE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_WRITE_PERMISSION_MASK 0x00010000
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_WRITE_PERMISSION_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_READ_PERMISSION_LSB 0x0011
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_READ_PERMISSION_MSB 0x0011
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_READ_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_READ_PERMISSION_MASK 0x00020000
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_READ_PERMISSION_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_EXECUTE_PERMISSION_LSB 0x0012
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_EXECUTE_PERMISSION_MSB 0x0012
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_EXECUTE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_EXECUTE_PERMISSION_MASK 0x00040000
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NO_EXECUTE_PERMISSION_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NONE_PERMISSION_LSB 0x0013
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NONE_PERMISSION_MSB 0x0013
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NONE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NONE_PERMISSION_MASK 0x00080000
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_PAGE_NONE_PERMISSION_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_SOC_BUS_ERROR_LSB 0x0014
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_SOC_BUS_ERROR_MSB 0x0014
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_SOC_BUS_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_SOC_BUS_ERROR_MASK 0x00100000
#define MMIO_HUB_MEM_INTERRUPT_MASK_MMU_SOC_BUS_ERROR_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_ASIP2HOST_INT_LSB 0x0015
#define MMIO_HUB_MEM_INTERRUPT_MASK_ASIP2HOST_INT_MSB 0x0015
#define MMIO_HUB_MEM_INTERRUPT_MASK_ASIP2HOST_INT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_ASIP2HOST_INT_MASK 0x00200000
#define MMIO_HUB_MEM_INTERRUPT_MASK_ASIP2HOST_INT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_IVP2HOST_INT_LSB 0x0016
#define MMIO_HUB_MEM_INTERRUPT_MASK_IVP2HOST_INT_MSB 0x0016
#define MMIO_HUB_MEM_INTERRUPT_MASK_IVP2HOST_INT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_IVP2HOST_INT_MASK 0x00400000
#define MMIO_HUB_MEM_INTERRUPT_MASK_IVP2HOST_INT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_WATCHDOG_INTERRUPT_LSB 0x0017
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_WATCHDOG_INTERRUPT_MSB 0x0017
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_WATCHDOG_INTERRUPT_MASK 0x00800000
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_BTRS_CVE_WATCHDOG_INTERRUPT_LSB 0x0018
#define MMIO_HUB_MEM_INTERRUPT_MASK_BTRS_CVE_WATCHDOG_INTERRUPT_MSB 0x0018
#define MMIO_HUB_MEM_INTERRUPT_MASK_BTRS_CVE_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_BTRS_CVE_WATCHDOG_INTERRUPT_MASK 0x01000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_BTRS_CVE_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_LSB 0x0019
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_MSB 0x0019
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_MASK 0x02000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_LSB 0x001a
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_MSB 0x001a
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_MASK 0x04000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_SINGLE_ERR_INTERRUPT_LSB 0x001b
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_SINGLE_ERR_INTERRUPT_MSB 0x001b
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_SINGLE_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_SINGLE_ERR_INTERRUPT_MASK 0x08000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_SINGLE_ERR_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_DOUBLE_ERR_INTERRUPT_LSB 0x001c
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_DOUBLE_ERR_INTERRUPT_MSB 0x001c
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_DOUBLE_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_DOUBLE_ERR_INTERRUPT_MASK 0x10000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_DOUBLE_ERR_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_SRAM_PARITY_ERR_INTERRUPT_LSB 0x001d
#define MMIO_HUB_MEM_INTERRUPT_MASK_SRAM_PARITY_ERR_INTERRUPT_MSB 0x001d
#define MMIO_HUB_MEM_INTERRUPT_MASK_SRAM_PARITY_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_SRAM_PARITY_ERR_INTERRUPT_MASK 0x20000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_SRAM_PARITY_ERR_INTERRUPT_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_UNMAPPED_ADDR_INTERRUPT_LSB 0x001e
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_UNMAPPED_ADDR_INTERRUPT_MSB 0x001e
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_UNMAPPED_ADDR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_UNMAPPED_ADDR_INTERRUPT_MASK 0x40000000
#define MMIO_HUB_MEM_INTERRUPT_MASK_DSRAM_UNMAPPED_ADDR_INTERRUPT_RESET_VALUE 0x00000001

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_INTERRUPT_STATUS_FLAG
#define MMIO_HUB_MEM_INTERRUPT_STATUS_FLAG

/*  INTERRUPT_STATUS desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Functional TLC/MMU/driver : interrupt status. TLC and MMU set */
/* the */

/*  corresponding bit for each interrupt they raise.[br] the driver */
/* */

/*  clears the register after handling the interrupt in the ISR [br] */
/* */
/* CLEAR_ON_READ*/
union MMIO_HUB_MEM_INTERRUPT_STATUS_t {
	struct {
uint32_t  TLC_CB_COMPLETED     :   1;
/*   TLC CB Completed Interrupt */
uint32_t  TLC_FIFO_EMPTY       :   1;
/*   TLC FIFO Empty Interrupt */
uint32_t  TLC_ERROR            :   1;    /*  TLC Error Interrupt*/
uint32_t  MMU_COMPLETED        :   1;
/*   MMU Completed Interrupt */
uint32_t  MMU_ERROR            :   1;    /*  MMU Error Interrupt*/
uint32_t  DUMP_COMPLETED       :   1;
/*   TLC DUMP_COMPLETED Interrupt */
uint32_t  TLC_PANIC            :   1;    /*  TLC PANIC Interrupt*/
uint32_t  TLC_RESERVED         :   8;    /*  TLC Reserved*/
uint32_t  RESERVED             :   1;    /*  Reserved Interrupt*/
uint32_t  MMU_PAGE_NO_WRITE_PERMISSION :   1;
/*   MMU No write permission on */
/* page while attempting to*/
/* perform write*/
uint32_t  MMU_PAGE_NO_READ_PERMISSION :   1;
/*   MMU No read permission on */
/* page while attempting to*/
/* perform read*/
uint32_t  MMU_PAGE_NO_EXECUTE_PERMISSION :   1;
/*   MMU No execute permission on */
/* page while attempting to*/
/* perform instruction*/
/* read/execute*/
uint32_t  MMU_PAGE_NONE_PERMISSION :   1;
/*   MMU Zero permission on page */
/* while attempting to write/read*/
uint32_t  MMU_SOC_BUS_ERROR    :   1;
/*   MMU OCP bus error result */
uint32_t  ASIP2HOST_INT        :   1;
/*   ASIP0 to Host Interrupt */
uint32_t  IVP2HOST_INT         :   1;
/*   IVP to Host Interrupt */
uint32_t  INTERNAL_CVE_WATCHDOG_INTERRUPT :   1;
/*   INTERNAL CVE Watchdog */
/* Interrupt*/
uint32_t  BTRS_CVE_WATCHDOG_INTERRUPT :   1;
/*   BTRS CVE Watchdog Interrupt */
uint32_t  INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT :   1;
/*   INTERNAL CVE Secondary */
/* Watchdog Interrupt*/
uint32_t  INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT :   1;
/*   INTERNAL CVE CnC Watchdog */
/* Interrupt*/
uint32_t  DSRAM_SINGLE_ERR_INTERRUPT :   1;
/*   Signals a single Error in the */
/* DeepSRAM*/
uint32_t  DSRAM_DOUBLE_ERR_INTERRUPT :   1;
/*   Signals a double Error in the */
/* DeepSRAM*/
uint32_t  SRAM_PARITY_ERR_INTERRUPT :   1;
/*   Signals a parity Error in one */
/* of the SRAMs*/
uint32_t  DSRAM_UNMAPPED_ADDR_INTERRUPT :   1;
/*   DeepSRAM interrupt due to */
/* access to unmamped address*/
uint32_t  RSVD_0               :   1;
/*  Nebulon auto filled RSVD [31:31] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_INTERRUPT_STATUS_OFFSET 0x08
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SCOPE 0x01
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SIZE 32
#define MMIO_HUB_MEM_INTERRUPT_STATUS_BITFIELD_COUNT 0x18
#define MMIO_HUB_MEM_INTERRUPT_STATUS_RESET 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_CB_COMPLETED_LSB 0x0000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_CB_COMPLETED_MSB 0x0000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_CB_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_CB_COMPLETED_MASK 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_CB_COMPLETED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_FIFO_EMPTY_LSB 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_FIFO_EMPTY_MSB 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_FIFO_EMPTY_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_FIFO_EMPTY_MASK 0x00000002
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_FIFO_EMPTY_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_ERROR_LSB 0x0002
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_ERROR_MSB 0x0002
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_ERROR_MASK 0x00000004
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_ERROR_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_COMPLETED_LSB 0x0003
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_COMPLETED_MSB 0x0003
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_COMPLETED_MASK 0x00000008
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_COMPLETED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_ERROR_LSB 0x0004
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_ERROR_MSB 0x0004
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_ERROR_MASK 0x00000010
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_ERROR_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DUMP_COMPLETED_LSB 0x0005
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DUMP_COMPLETED_MSB 0x0005
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DUMP_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DUMP_COMPLETED_MASK 0x00000020
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DUMP_COMPLETED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_PANIC_LSB 0x0006
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_PANIC_MSB 0x0006
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_PANIC_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_PANIC_MASK 0x00000040
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_PANIC_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_RESERVED_LSB 0x0007
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_RESERVED_MSB 0x000e
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_RESERVED_RANGE 0x0008
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_RESERVED_MASK 0x00007f80
#define MMIO_HUB_MEM_INTERRUPT_STATUS_TLC_RESERVED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_RESERVED_LSB 0x000f
#define MMIO_HUB_MEM_INTERRUPT_STATUS_RESERVED_MSB 0x000f
#define MMIO_HUB_MEM_INTERRUPT_STATUS_RESERVED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_RESERVED_MASK 0x00008000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_RESERVED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_WRITE_PERMISSION_LSB 0x0010
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_WRITE_PERMISSION_MSB 0x0010
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_WRITE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_WRITE_PERMISSION_MASK 0x00010000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_WRITE_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_READ_PERMISSION_LSB 0x0011
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_READ_PERMISSION_MSB 0x0011
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_READ_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_READ_PERMISSION_MASK 0x00020000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_READ_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_EXECUTE_PERMISSION_LSB 0x0012
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_EXECUTE_PERMISSION_MSB 0x0012
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_EXECUTE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_EXECUTE_PERMISSION_MASK 0x00040000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NO_EXECUTE_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NONE_PERMISSION_LSB 0x0013
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NONE_PERMISSION_MSB 0x0013
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NONE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NONE_PERMISSION_MASK 0x00080000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_PAGE_NONE_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_SOC_BUS_ERROR_LSB 0x0014
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_SOC_BUS_ERROR_MSB 0x0014
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_SOC_BUS_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_SOC_BUS_ERROR_MASK 0x00100000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_MMU_SOC_BUS_ERROR_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_ASIP2HOST_INT_LSB 0x0015
#define MMIO_HUB_MEM_INTERRUPT_STATUS_ASIP2HOST_INT_MSB 0x0015
#define MMIO_HUB_MEM_INTERRUPT_STATUS_ASIP2HOST_INT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_ASIP2HOST_INT_MASK 0x00200000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_ASIP2HOST_INT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_IVP2HOST_INT_LSB 0x0016
#define MMIO_HUB_MEM_INTERRUPT_STATUS_IVP2HOST_INT_MSB 0x0016
#define MMIO_HUB_MEM_INTERRUPT_STATUS_IVP2HOST_INT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_IVP2HOST_INT_MASK 0x00400000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_IVP2HOST_INT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_WATCHDOG_INTERRUPT_LSB 0x0017
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_WATCHDOG_INTERRUPT_MSB 0x0017
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_WATCHDOG_INTERRUPT_MASK 0x00800000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_BTRS_CVE_WATCHDOG_INTERRUPT_LSB 0x0018
#define MMIO_HUB_MEM_INTERRUPT_STATUS_BTRS_CVE_WATCHDOG_INTERRUPT_MSB 0x0018
#define MMIO_HUB_MEM_INTERRUPT_STATUS_BTRS_CVE_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_BTRS_CVE_WATCHDOG_INTERRUPT_MASK 0x01000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_BTRS_CVE_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_LSB 0x0019
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_MSB 0x0019
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_MASK 0x02000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_LSB 0x001a
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_MSB 0x001a
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_MASK 0x04000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_SINGLE_ERR_INTERRUPT_LSB 0x001b
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_SINGLE_ERR_INTERRUPT_MSB 0x001b
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_SINGLE_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_SINGLE_ERR_INTERRUPT_MASK 0x08000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_SINGLE_ERR_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_DOUBLE_ERR_INTERRUPT_LSB 0x001c
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_DOUBLE_ERR_INTERRUPT_MSB 0x001c
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_DOUBLE_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_DOUBLE_ERR_INTERRUPT_MASK 0x10000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_DOUBLE_ERR_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SRAM_PARITY_ERR_INTERRUPT_LSB 0x001d
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SRAM_PARITY_ERR_INTERRUPT_MSB 0x001d
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SRAM_PARITY_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SRAM_PARITY_ERR_INTERRUPT_MASK 0x20000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SRAM_PARITY_ERR_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_UNMAPPED_ADDR_INTERRUPT_LSB 0x001e
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_UNMAPPED_ADDR_INTERRUPT_MSB 0x001e
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_UNMAPPED_ADDR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_UNMAPPED_ADDR_INTERRUPT_MASK 0x40000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_DSRAM_UNMAPPED_ADDR_INTERRUPT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_FLAG
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_FLAG

/*  INTERRUPT_STATUS_SHADOW desc:  Power Domain : CVE Gated Reset */
/* Domain : CVE Reset Function Domain : */

/*  CVE Functional TLC/MMU/driver : interrupt status. TLC and MMU set */
/* the */

/*  corresponding bit for each interrupt they raise.[br] the driver */
/* */

/*  clears the register after handling the interrupt in the ISR [br] */
/* */
/* CLEAR_ON_READ*/
union MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_t {
	struct {
uint32_t  TLC_CB_COMPLETED     :   1;
/*   TLC CB Completed Interrupt */
uint32_t  TLC_FIFO_EMPTY       :   1;
/*   TLC FIFO Empty Interrupt */
uint32_t  TLC_ERROR            :   1;    /*  TLC Error Interrupt*/
uint32_t  MMU_COMPLETED        :   1;
/*   MMU Completed Interrupt */
uint32_t  MMU_ERROR            :   1;    /*  MMU Error Interrupt*/
uint32_t  DUMP_COMPLETED       :   1;
/*   TLC DUMP_COMPLETED Interrupt */
uint32_t  TLC_PANIC            :   1;    /*  TLC PANIC Interrupt*/
uint32_t  TLC_RESERVED         :   8;    /*  TLC Reserved*/
uint32_t  RESERVED             :   1;    /*  Reserved Interrupt*/
uint32_t  MMU_PAGE_NO_WRITE_PERMISSION :   1;
/*   MMU No write permission on */
/* page while attempting to*/
/* perform write*/
uint32_t  MMU_PAGE_NO_READ_PERMISSION :   1;
/*   MMU No read permission on */
/* page while attempting to*/
/* perform read*/
uint32_t  MMU_PAGE_NO_EXECUTE_PERMISSION :   1;
/*   MMU No execute permission on */
/* page while attempting to*/
/* perform instruction*/
/* read/execute*/
uint32_t  MMU_PAGE_NONE_PERMISSION :   1;
/*   MMU Zero permission on page */
/* while attempting to write/read*/
uint32_t  MMU_SOC_BUS_ERROR    :   1;
/*   MMU OCP bus error result */
uint32_t  ASIP2HOST_INT        :   1;
/*   ASIP0 to Host Interrupt */
uint32_t  IVP2HOST_INT         :   1;
/*   IVP to Host Interrupt */
uint32_t  INTERNAL_CVE_WATCHDOG_INTERRUPT :   1;
/*   INTERNAL CVE Watchdog */
/* Interrupt*/
uint32_t  BTRS_CVE_WATCHDOG_INTERRUPT :   1;
/*   BTRS CVE Watchdog Interrupt */
uint32_t  INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT :   1;
/*   INTERNAL CVE Secondary */
/* Watchdog Interrupt*/
uint32_t  INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT :   1;
/*   INTERNAL CVE CnC Watchdog */
/* Interrupt*/
uint32_t  DSRAM_SINGLE_ERR_INTERRUPT :   1;
/*   Signals a single Error in the */
/* DeepSRAM*/
uint32_t  DSRAM_DOUBLE_ERR_INTERRUPT :   1;
/*   Signals a double Error in the */
/* DeepSRAM*/
uint32_t  SRAM_PARITY_ERR_INTERRUPT :   1;
/*   Signals a parity Error in one */
/* of the SRAMs*/
uint32_t  DSRAM_UNMAPPED_ADDR_INTERRUPT :   1;
/*   Mask DeepSRAM interrupt due */
/* to access to unmamped address*/
uint32_t  RSVD_0               :   1;
/*  Nebulon auto filled RSVD [31:31] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_OFFSET 0x0c
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SCOPE 0x01
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SIZE 32
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_BITFIELD_COUNT 0x18
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_RESET 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_CB_COMPLETED_LSB 0x0000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_CB_COMPLETED_MSB 0x0000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_CB_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_CB_COMPLETED_MASK 0x00000001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_CB_COMPLETED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_FIFO_EMPTY_LSB 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_FIFO_EMPTY_MSB 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_FIFO_EMPTY_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_FIFO_EMPTY_MASK 0x00000002
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_FIFO_EMPTY_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_ERROR_LSB 0x0002
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_ERROR_MSB 0x0002
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_ERROR_MASK 0x00000004
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_ERROR_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_COMPLETED_LSB 0x0003
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_COMPLETED_MSB 0x0003
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_COMPLETED_MASK 0x00000008
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_COMPLETED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_ERROR_LSB 0x0004
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_ERROR_MSB 0x0004
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_ERROR_MASK 0x00000010
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_ERROR_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DUMP_COMPLETED_LSB 0x0005
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DUMP_COMPLETED_MSB 0x0005
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DUMP_COMPLETED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DUMP_COMPLETED_MASK 0x00000020
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DUMP_COMPLETED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_PANIC_LSB 0x0006
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_PANIC_MSB 0x0006
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_PANIC_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_PANIC_MASK 0x00000040
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_PANIC_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_RESERVED_LSB 0x0007
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_RESERVED_MSB 0x000e
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_RESERVED_RANGE 0x0008
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_RESERVED_MASK 0x00007f80
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_TLC_RESERVED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_RESERVED_LSB 0x000f
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_RESERVED_MSB 0x000f
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_RESERVED_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_RESERVED_MASK 0x00008000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_RESERVED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_WRITE_PERMISSION_LSB 0x0010
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_WRITE_PERMISSION_MSB 0x0010
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_WRITE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_WRITE_PERMISSION_MASK 0x00010000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_WRITE_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_READ_PERMISSION_LSB 0x0011
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_READ_PERMISSION_MSB 0x0011
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_READ_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_READ_PERMISSION_MASK 0x00020000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_READ_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_EXECUTE_PERMISSION_LSB 0x0012
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_EXECUTE_PERMISSION_MSB 0x0012
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_EXECUTE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_EXECUTE_PERMISSION_MASK 0x00040000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NO_EXECUTE_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NONE_PERMISSION_LSB 0x0013
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NONE_PERMISSION_MSB 0x0013
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NONE_PERMISSION_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NONE_PERMISSION_MASK 0x00080000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_PAGE_NONE_PERMISSION_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_SOC_BUS_ERROR_LSB 0x0014
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_SOC_BUS_ERROR_MSB 0x0014
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_SOC_BUS_ERROR_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_SOC_BUS_ERROR_MASK 0x00100000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_MMU_SOC_BUS_ERROR_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_ASIP2HOST_INT_LSB 0x0015
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_ASIP2HOST_INT_MSB 0x0015
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_ASIP2HOST_INT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_ASIP2HOST_INT_MASK 0x00200000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_ASIP2HOST_INT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_IVP2HOST_INT_LSB 0x0016
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_IVP2HOST_INT_MSB 0x0016
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_IVP2HOST_INT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_IVP2HOST_INT_MASK 0x00400000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_IVP2HOST_INT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_WATCHDOG_INTERRUPT_LSB 0x0017
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_WATCHDOG_INTERRUPT_MSB 0x0017
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_WATCHDOG_INTERRUPT_MASK 0x00800000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_BTRS_CVE_WATCHDOG_INTERRUPT_LSB 0x0018
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_BTRS_CVE_WATCHDOG_INTERRUPT_MSB 0x0018
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_BTRS_CVE_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_BTRS_CVE_WATCHDOG_INTERRUPT_MASK 0x01000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_BTRS_CVE_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_LSB 0x0019
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_MSB 0x0019
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_MASK 0x02000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_SECONDARY_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_LSB 0x001a
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_MSB 0x001a
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_MASK 0x04000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_INTERNAL_CVE_CNC_WATCHDOG_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_SINGLE_ERR_INTERRUPT_LSB 0x001b
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_SINGLE_ERR_INTERRUPT_MSB 0x001b
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_SINGLE_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_SINGLE_ERR_INTERRUPT_MASK 0x08000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_SINGLE_ERR_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_DOUBLE_ERR_INTERRUPT_LSB 0x001c
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_DOUBLE_ERR_INTERRUPT_MSB 0x001c
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_DOUBLE_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_DOUBLE_ERR_INTERRUPT_MASK 0x10000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_DOUBLE_ERR_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SRAM_PARITY_ERR_INTERRUPT_LSB 0x001d
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SRAM_PARITY_ERR_INTERRUPT_MSB 0x001d
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SRAM_PARITY_ERR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SRAM_PARITY_ERR_INTERRUPT_MASK 0x20000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_SRAM_PARITY_ERR_INTERRUPT_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_UNMAPPED_ADDR_INTERRUPT_LSB 0x001e
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_UNMAPPED_ADDR_INTERRUPT_MSB 0x001e
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_UNMAPPED_ADDR_INTERRUPT_RANGE 0x0001
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_UNMAPPED_ADDR_INTERRUPT_MASK 0x40000000
#define MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_DSRAM_UNMAPPED_ADDR_INTERRUPT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_TLC_WR_PULSE_FLAG
#define MMIO_HUB_MEM_TLC_WR_PULSE_FLAG

/*  TLC_WR_PULSE desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */

/*  CVE Functional Writting to the register will create one clock */
/* pulse of */
/* it's fields*/
union MMIO_HUB_MEM_TLC_WR_PULSE_t {
	struct {
uint32_t  CVE_WATCHDOG_PETTING :   1;
/*   Writing one will create the */
/* CVE_WD_PETTING_PULSE to*/
/* indicate that the CVE is alive*/
uint32_t  CVE_SECONDARY_WATCHDOG_PETTING :   1;
/*   Writing one will create the */
/* CVE_WD_PETTING_PULSE to*/
/* indicate that the CVE is alive*/
uint32_t  RSVD_0               :  30;
/*  Nebulon auto filled RSVD [31:2] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_TLC_WR_PULSE_OFFSET 0x10
#define MMIO_HUB_MEM_TLC_WR_PULSE_SCOPE 0x01
#define MMIO_HUB_MEM_TLC_WR_PULSE_SIZE 32
#define MMIO_HUB_MEM_TLC_WR_PULSE_BITFIELD_COUNT 0x02
#define MMIO_HUB_MEM_TLC_WR_PULSE_RESET 0x00000000
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_WATCHDOG_PETTING_LSB 0x0000
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_WATCHDOG_PETTING_MSB 0x0000
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_WATCHDOG_PETTING_RANGE 0x0001
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_WATCHDOG_PETTING_MASK 0x00000001
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_WATCHDOG_PETTING_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_SECONDARY_WATCHDOG_PETTING_LSB 0x0001
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_SECONDARY_WATCHDOG_PETTING_MSB 0x0001
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_SECONDARY_WATCHDOG_PETTING_RANGE 0x0001
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_SECONDARY_WATCHDOG_PETTING_MASK 0x00000002
#define MMIO_HUB_MEM_TLC_WR_PULSE_CVE_SECONDARY_WATCHDOG_PETTING_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_P_WAIT_MODE_FLAG
#define MMIO_HUB_MEM_P_WAIT_MODE_FLAG

/*  P_WAIT_MODE desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */

/*  CVE Functional Upon executing a WAITI instruction, the PWaitMode */
/* */

/*  output signal will not be asserted until there are no outstanding */
/* PIF */

/*  requests, and waits until all prefetch and block prefetch */
/* operations */
/* have completed.*/
union MMIO_HUB_MEM_P_WAIT_MODE_t {
	struct {
uint32_t  TLC_P_WAIT_MODE      :   1;
/*   Upon executing a WAITI */
/* instruction, the PWaitMode*/
/* output signal will not be*/
/* asserted until there are no*/
/* outstanding PIF requests, and*/
/* waits until all prefetch and*/
/* block prefetch operations have*/
/* completed.*/
uint32_t  IVP_P_WAIT_MODE      :   1;
/*   Upon executing a WAITI */
/* instruction, the PWaitMode*/
/* output signal will not be*/
/* asserted until there are no*/
/* outstanding PIF requests, and*/
/* waits until all prefetch and*/
/* block prefetch operations have*/
/* completed.*/
uint32_t  ASIP_P_WAIT_MODE     :   1;
/*   Upon executing a WAITI */
/* instruction, the PWaitMode*/
/* output signal will not be*/
/* asserted until there are no*/
/* outstanding PIF requests, and*/
/* waits until all prefetch and*/
/* block prefetch operations have*/
/* completed.*/
uint32_t  DSE_GCLK_DISABLE     :   1;
/*   when '1' - indicates DSE is */
/* IDLE, used by MMIO IDLE FSM*/
uint32_t  MMU_DONE             :   1;
/*   when '1' - indicates MMU is */
/* IDLE, used by MMIO IDLE FSM*/
uint32_t  ALL_CORES_DONE       :   1;
/*   when '1' - indicates MMIO */
/* IDLE FSM should be in IDLE*/
/* state*/
uint32_t  DELPHI_DONE          :   1;
/*   when '1' - indicates Delphi */
/* is IDLE, used by MMIO IDLE FSM*/
uint32_t  RSVD_0               :  25;
/*  Nebulon auto filled RSVD [31:7] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_P_WAIT_MODE_OFFSET 0x14
#define MMIO_HUB_MEM_P_WAIT_MODE_SCOPE 0x01
#define MMIO_HUB_MEM_P_WAIT_MODE_SIZE 32
#define MMIO_HUB_MEM_P_WAIT_MODE_BITFIELD_COUNT 0x07
#define MMIO_HUB_MEM_P_WAIT_MODE_RESET 0x00000078
#define MMIO_HUB_MEM_P_WAIT_MODE_TLC_P_WAIT_MODE_LSB 0x0000
#define MMIO_HUB_MEM_P_WAIT_MODE_TLC_P_WAIT_MODE_MSB 0x0000
#define MMIO_HUB_MEM_P_WAIT_MODE_TLC_P_WAIT_MODE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_TLC_P_WAIT_MODE_MASK 0x00000001
#define MMIO_HUB_MEM_P_WAIT_MODE_TLC_P_WAIT_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_P_WAIT_MODE_IVP_P_WAIT_MODE_LSB 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_IVP_P_WAIT_MODE_MSB 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_IVP_P_WAIT_MODE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_IVP_P_WAIT_MODE_MASK 0x00000002
#define MMIO_HUB_MEM_P_WAIT_MODE_IVP_P_WAIT_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_P_WAIT_MODE_ASIP_P_WAIT_MODE_LSB 0x0002
#define MMIO_HUB_MEM_P_WAIT_MODE_ASIP_P_WAIT_MODE_MSB 0x0002
#define MMIO_HUB_MEM_P_WAIT_MODE_ASIP_P_WAIT_MODE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_ASIP_P_WAIT_MODE_MASK 0x00000004
#define MMIO_HUB_MEM_P_WAIT_MODE_ASIP_P_WAIT_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_P_WAIT_MODE_DSE_GCLK_DISABLE_LSB 0x0003
#define MMIO_HUB_MEM_P_WAIT_MODE_DSE_GCLK_DISABLE_MSB 0x0003
#define MMIO_HUB_MEM_P_WAIT_MODE_DSE_GCLK_DISABLE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_DSE_GCLK_DISABLE_MASK 0x00000008
#define MMIO_HUB_MEM_P_WAIT_MODE_DSE_GCLK_DISABLE_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_P_WAIT_MODE_MMU_DONE_LSB 0x0004
#define MMIO_HUB_MEM_P_WAIT_MODE_MMU_DONE_MSB 0x0004
#define MMIO_HUB_MEM_P_WAIT_MODE_MMU_DONE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_MMU_DONE_MASK 0x00000010
#define MMIO_HUB_MEM_P_WAIT_MODE_MMU_DONE_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_P_WAIT_MODE_ALL_CORES_DONE_LSB 0x0005
#define MMIO_HUB_MEM_P_WAIT_MODE_ALL_CORES_DONE_MSB 0x0005
#define MMIO_HUB_MEM_P_WAIT_MODE_ALL_CORES_DONE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_ALL_CORES_DONE_MASK 0x00000020
#define MMIO_HUB_MEM_P_WAIT_MODE_ALL_CORES_DONE_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_P_WAIT_MODE_DELPHI_DONE_LSB 0x0006
#define MMIO_HUB_MEM_P_WAIT_MODE_DELPHI_DONE_MSB 0x0006
#define MMIO_HUB_MEM_P_WAIT_MODE_DELPHI_DONE_RANGE 0x0001
#define MMIO_HUB_MEM_P_WAIT_MODE_DELPHI_DONE_MASK 0x00000040
#define MMIO_HUB_MEM_P_WAIT_MODE_DELPHI_DONE_RESET_VALUE 0x00000001

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_DEEPSRAM_CONFIG_FLAG
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_FLAG

/*  DEEPSRAM_CONFIG desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */
/* CVE Initialization Config Deep SRAM working Parameters*/
union MMIO_HUB_MEM_DEEPSRAM_CONFIG_t {
	struct {
uint32_t  DSRAM_ECC_ENABLE     :   1;
/*   1: Enable ECC 0:disable ECC */
/* of Deep SRAM*/
uint32_t  DSRAM_STORAGE        :   2;
/*   Size of the DeepSRAM. */
/* options: 0MB/1MB/2MB/4MB*/
uint32_t  DSRAM_ARB_MODE       :   2;
/*   Arbitration scheme in case of */
/* bank conflict*/
uint32_t  DSRAM_PARTIAL_WR_PIPE_EN :   1;
/*   Enable Partial Write */
/* pipelining*/
uint32_t  DSRAM_RD_VALID_OVERRIDE :   1;
/*   Override the zero masking */
/* data if line isn't valid*/
uint32_t  RSVD_0               :  25;
/*  Nebulon auto filled RSVD [31:7] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_OFFSET 0x18
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_SCOPE 0x01
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_SIZE 32
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_BITFIELD_COUNT 0x05
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_RESET 0x00000027
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ECC_ENABLE_LSB 0x0000
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ECC_ENABLE_MSB 0x0000
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ECC_ENABLE_RANGE 0x0001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ECC_ENABLE_MASK 0x00000001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ECC_ENABLE_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_STORAGE_LSB 0x0001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_STORAGE_MSB 0x0002
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_STORAGE_RANGE 0x0002
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_STORAGE_MASK 0x00000006
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_STORAGE_RESET_VALUE 0x00000003
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ARB_MODE_LSB 0x0003
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ARB_MODE_MSB 0x0004
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ARB_MODE_RANGE 0x0002
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ARB_MODE_MASK 0x00000018
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_ARB_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_PARTIAL_WR_PIPE_EN_LSB 0x0005
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_PARTIAL_WR_PIPE_EN_MSB 0x0005
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_PARTIAL_WR_PIPE_EN_RANGE 0x0001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_PARTIAL_WR_PIPE_EN_MASK 0x00000020
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_PARTIAL_WR_PIPE_EN_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_RD_VALID_OVERRIDE_LSB 0x0006
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_RD_VALID_OVERRIDE_MSB 0x0006
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_RD_VALID_OVERRIDE_RANGE 0x0001
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_RD_VALID_OVERRIDE_MASK 0x00000040
#define MMIO_HUB_MEM_DEEPSRAM_CONFIG_DSRAM_RD_VALID_OVERRIDE_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_DEEPSRAM_CLEAR_FLAG
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_FLAG

/*  DEEPSRAM_CLEAR desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */

/*  CVE Initialization a write to the register trigers a pulse to the */
/* */
/* DeepSRAM that will clear it*/
union MMIO_HUB_MEM_DEEPSRAM_CLEAR_t {
	struct {
uint32_t  DSRAM_CLEAR          :   1;
/*   write of one will trigger a */
/* clear*/
uint32_t  RSVD_0               :  31;
/*  Nebulon auto filled RSVD [31:1] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_OFFSET 0x1c
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_SCOPE 0x01
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_SIZE 32
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_RESET 0x00000000
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_DSRAM_CLEAR_LSB 0x0000
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_DSRAM_CLEAR_MSB 0x0000
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_DSRAM_CLEAR_RANGE 0x0001
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_DSRAM_CLEAR_MASK 0x00000001
#define MMIO_HUB_MEM_DEEPSRAM_CLEAR_DSRAM_CLEAR_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_CONFIG_FLAG
#define MMIO_HUB_MEM_CVE_CONFIG_FLAG

/*  CVE_CONFIG desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */
/* CVE Initialization Config CVE Working Parameters*/
union MMIO_HUB_MEM_CVE_CONFIG_t {
	struct {
uint32_t  CVE_IDLE_ENABLE      :   1;
/*   0: IDLE indicator will be */
/* Blocked 1: IDLE Indicator*/
/* Enable*/
uint32_t  RSVD_0               :   3;
/*  Nebulon auto filled RSVD [3:1] */
uint32_t  CVE_IDLE_SKIP_TLC_CHECK :   1;
/*   Setting to one will Skip TLC */
/* Status Checks before going*/
/* into IDLE (Ignore tlcPWaitMode*/
/* and tlc_runstall)*/
uint32_t  CVE_IDLE_SKIP_IVP_CHECK :   1;
/*   Setting to one will Skip IVP */
/* Status Checks before going*/
/* into IDLE (Ignore ivpPWaitMode*/
/* and ivp_runstall)*/
uint32_t  CVE_IDLE_SKIP_ASIP_CHECK :   1;
/*   Setting to one will Skip ASIP */
/* Status Checks before going*/
/* into IDLE (Ignore*/
/* asipPWaitMode and*/
/* asip_runstall)*/
uint32_t  CVE_IDLE_SKIP_DSE_CHECK :   1;
/*   Setting to one will Skip DSE */
/* Status Checks before going*/
/* into IDLE (Ignore dse_gclk_en)*/
uint32_t  CVE_WATCHDOG_ENABLE  :   1;
/*   Setting to one will Enable */
/* CVE Internal Watchdog, while*/
/* CVE External clock is on, the*/
/* watchdog counter will keep*/
/* tiking*/
uint32_t  RSVD_1               :   1;
/*  Nebulon auto filled RSVD [9:9] */
uint32_t  CVE_IDLE_SKIP_MMU_CHECK :   1;
/*   Setting to one will Skip MMU */
/* Status Checks before going*/
/* into IDLE (Ignore mmu_busy)*/
uint32_t  CVE_SECONDARY_WATCHDOG_ENABLE :   1;
/*   Setting to one will Enable */
/* CVE Secondary Internal*/
/* Watchdog, while CVE External*/
/* clock is on, the watchdog*/
/* counter will keep ticking*/
uint32_t  CVE_CNC_WATCHDOG_ENABLE :   1;
/*   Setting to one will Enable */
/* CVE Internal CnC Watchdog,*/
/* while CVE External clock is*/
/* on, the watchdog counter will*/
/* keep ticking*/
uint32_t  RSVD_2               :   4;
/*  Nebulon auto filled RSVD [16:13] */
uint32_t  MFW_CNC_BRG_AGGR_DISABLED :   1;
/*   0: bridge is fully functional */
/* and aggregates credits 1:*/
/* bridge functionality is*/
/* reduced to be a fifo*/
uint32_t  MFW_CNC_BRG_DMA_AGGR_DISABLED :   1;
/*   0: Bridge functions also for */
/* DMA CNC messages 1: DMA CNC*/
/* messages handling is OFF*/
uint32_t  TLC_CNC_BRG_AGGR_DISABLED :   1;
/*   0: tlc cnc bridge is fully */
/* functional and aggregates*/
/* credits, 1: tlc cnc bridge*/
/* functionality is reduced to be*/
/* a fifo*/
uint32_t  CVE_IDLE_SKIP_DELPHI_CHECK :   1;
/*   Setting to one will Skip */
/* Delphi Status Checks before*/
/* going into IDLE)*/
uint32_t  RSVD_3               :  11;
/*  Nebulon auto filled RSVD [31:21] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_CONFIG_OFFSET 0x20
#define MMIO_HUB_MEM_CVE_CONFIG_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_CONFIG_SIZE 32
#define MMIO_HUB_MEM_CVE_CONFIG_BITFIELD_COUNT 0x0d
#define MMIO_HUB_MEM_CVE_CONFIG_RESET 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_ENABLE_LSB 0x0000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_ENABLE_MSB 0x0000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_ENABLE_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_ENABLE_MASK 0x00000001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_ENABLE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_TLC_CHECK_LSB 0x0004
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_TLC_CHECK_MSB 0x0004
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_TLC_CHECK_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_TLC_CHECK_MASK 0x00000010
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_TLC_CHECK_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_IVP_CHECK_LSB 0x0005
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_IVP_CHECK_MSB 0x0005
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_IVP_CHECK_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_IVP_CHECK_MASK 0x00000020
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_IVP_CHECK_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_ASIP_CHECK_LSB 0x0006
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_ASIP_CHECK_MSB 0x0006
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_ASIP_CHECK_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_ASIP_CHECK_MASK 0x00000040
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_ASIP_CHECK_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DSE_CHECK_LSB 0x0007
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DSE_CHECK_MSB 0x0007
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DSE_CHECK_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DSE_CHECK_MASK 0x00000080
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DSE_CHECK_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_WATCHDOG_ENABLE_LSB 0x0008
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_WATCHDOG_ENABLE_MSB 0x0008
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_WATCHDOG_ENABLE_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_WATCHDOG_ENABLE_MASK 0x00000100
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_WATCHDOG_ENABLE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_MMU_CHECK_LSB 0x000a
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_MMU_CHECK_MSB 0x000a
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_MMU_CHECK_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_MMU_CHECK_MASK 0x00000400
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_MMU_CHECK_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_SECONDARY_WATCHDOG_ENABLE_LSB 0x000b
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_SECONDARY_WATCHDOG_ENABLE_MSB 0x000b
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_SECONDARY_WATCHDOG_ENABLE_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_SECONDARY_WATCHDOG_ENABLE_MASK 0x00000800
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_SECONDARY_WATCHDOG_ENABLE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_CNC_WATCHDOG_ENABLE_LSB 0x000c
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_CNC_WATCHDOG_ENABLE_MSB 0x000c
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_CNC_WATCHDOG_ENABLE_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_CNC_WATCHDOG_ENABLE_MASK 0x00001000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_CNC_WATCHDOG_ENABLE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_AGGR_DISABLED_LSB 0x0011
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_AGGR_DISABLED_MSB 0x0011
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_AGGR_DISABLED_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_AGGR_DISABLED_MASK 0x00020000
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_AGGR_DISABLED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_DMA_AGGR_DISABLED_LSB 0x0012
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_DMA_AGGR_DISABLED_MSB 0x0012
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_DMA_AGGR_DISABLED_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_DMA_AGGR_DISABLED_MASK 0x00040000
#define MMIO_HUB_MEM_CVE_CONFIG_MFW_CNC_BRG_DMA_AGGR_DISABLED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_TLC_CNC_BRG_AGGR_DISABLED_LSB 0x0013
#define MMIO_HUB_MEM_CVE_CONFIG_TLC_CNC_BRG_AGGR_DISABLED_MSB 0x0013
#define MMIO_HUB_MEM_CVE_CONFIG_TLC_CNC_BRG_AGGR_DISABLED_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_TLC_CNC_BRG_AGGR_DISABLED_MASK 0x00080000
#define MMIO_HUB_MEM_CVE_CONFIG_TLC_CNC_BRG_AGGR_DISABLED_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DELPHI_CHECK_LSB 0x0014
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DELPHI_CHECK_MSB 0x0014
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DELPHI_CHECK_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DELPHI_CHECK_MASK 0x00100000
#define MMIO_HUB_MEM_CVE_CONFIG_CVE_IDLE_SKIP_DELPHI_CHECK_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_FLAG
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_FLAG

/*  PRE_IDLE_DELAY_COUNT desc:  Power Domain : CVE Gated Reset Domain */
/* : CVE Reset Function Domain : */

/*  CVE Initialization The delay in CVE clocks the IDLE_FSM is */
/* counting */
/* befor generation the IDLE pulse indicator*/
union MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_OFFSET 0x24
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_SCOPE 0x01
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_SIZE 32
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_RESET 0x00000fa0
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_DATA_LSB 0x0000
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_DATA_MSB 0x001f
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_DATA_RESET_VALUE 0x00000fa0

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CBB_ERROR_CODE_FLAG
#define MMIO_HUB_MEM_CBB_ERROR_CODE_FLAG

/*  CBB_ERROR_CODE desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */

/*  CVE Info TLC/driver : CBB error information. These registers will */
/* be */

/*  set [br] before the TLC raises[br] the CBB_ERROR interrupt, and */
/* will */
/* be [br] cleared by the driver*/
union MMIO_HUB_MEM_CBB_ERROR_CODE_t {
	struct {
uint32_t  error_code           :  16;
/*   CBB error code: value should */
/* be declared in the CBB*/
/* specific header file*/
uint32_t  access_type          :  16;
/*   the ID of the CBB that */
/* reports this error*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CBB_ERROR_CODE_OFFSET 0x28
#define MMIO_HUB_MEM_CBB_ERROR_CODE_SCOPE 0x01
#define MMIO_HUB_MEM_CBB_ERROR_CODE_SIZE 32
#define MMIO_HUB_MEM_CBB_ERROR_CODE_BITFIELD_COUNT 0x02
#define MMIO_HUB_MEM_CBB_ERROR_CODE_RESET 0x00000000
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ERROR_CODE_LSB 0x0000
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ERROR_CODE_MSB 0x000f
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ERROR_CODE_RANGE 0x0010
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ERROR_CODE_MASK 0x0000ffff
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ERROR_CODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ACCESS_TYPE_LSB 0x0010
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ACCESS_TYPE_MSB 0x001f
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ACCESS_TYPE_RANGE 0x0010
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ACCESS_TYPE_MASK 0xffff0000
#define MMIO_HUB_MEM_CBB_ERROR_CODE_ACCESS_TYPE_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CBB_ERROR_INFO_FLAG
#define MMIO_HUB_MEM_CBB_ERROR_INFO_FLAG

/*  CBB_ERROR_INFO desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */
/* CVE Info TLC: the CBB specific extra info*/
union MMIO_HUB_MEM_CBB_ERROR_INFO_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CBB_ERROR_INFO_OFFSET 0x2c
#define MMIO_HUB_MEM_CBB_ERROR_INFO_SCOPE 0x01
#define MMIO_HUB_MEM_CBB_ERROR_INFO_SIZE 32
#define MMIO_HUB_MEM_CBB_ERROR_INFO_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CBB_ERROR_INFO_RESET 0x00000000
#define MMIO_HUB_MEM_CBB_ERROR_INFO_DATA_LSB 0x0000
#define MMIO_HUB_MEM_CBB_ERROR_INFO_DATA_MSB 0x001f
#define MMIO_HUB_MEM_CBB_ERROR_INFO_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_CBB_ERROR_INFO_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_CBB_ERROR_INFO_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PROG_CORES_CONTROL_FLAG
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_FLAG

/*  PROG_CORES_CONTROL desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Initialization driver : enable each programmable core to run */
/* only */
/* after reset is complete and MMU is configured*/
union MMIO_HUB_MEM_PROG_CORES_CONTROL_t {
	struct {
uint32_t  tlc_runstall         :   1;    /*  TLC Runstall*/
uint32_t  ivp_runstall         :   1;    /*  IVP Runstall*/
uint32_t  asip0_runstall       :   1;    /*  asip0 Runstall*/
uint32_t  asip1_runstall       :   1;    /*  asip1 Runstall*/
uint32_t  reserved             :  28;    /*  Reserved*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_OFFSET 0x30
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_SCOPE 0x01
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_SIZE 32
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_BITFIELD_COUNT 0x05
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_RESET 0x0000000f
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_TLC_RUNSTALL_LSB 0x0000
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_TLC_RUNSTALL_MSB 0x0000
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_TLC_RUNSTALL_RANGE 0x0001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_TLC_RUNSTALL_MASK 0x00000001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_TLC_RUNSTALL_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_IVP_RUNSTALL_LSB 0x0001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_IVP_RUNSTALL_MSB 0x0001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_IVP_RUNSTALL_RANGE 0x0001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_IVP_RUNSTALL_MASK 0x00000002
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_IVP_RUNSTALL_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP0_RUNSTALL_LSB 0x0002
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP0_RUNSTALL_MSB 0x0002
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP0_RUNSTALL_RANGE 0x0001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP0_RUNSTALL_MASK 0x00000004
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP0_RUNSTALL_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP1_RUNSTALL_LSB 0x0003
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP1_RUNSTALL_MSB 0x0003
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP1_RUNSTALL_RANGE 0x0001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP1_RUNSTALL_MASK 0x00000008
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_ASIP1_RUNSTALL_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_RESERVED_LSB 0x0004
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_RESERVED_MSB 0x001f
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_RESERVED_RANGE 0x001c
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_RESERVED_MASK 0xfffffff0
#define MMIO_HUB_MEM_PROG_CORES_CONTROL_RESERVED_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_TLC_INFO_FLAG
#define MMIO_HUB_MEM_TLC_INFO_FLAG

/*  TLC_INFO desc:  Power Domain : CVE Gated Reset Domain : CVE Reset */
/* Function Domain : */
/* CVE Info TLC: the CBB specific extra info*/
union MMIO_HUB_MEM_TLC_INFO_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_TLC_INFO_OFFSET 0x34
#define MMIO_HUB_MEM_TLC_INFO_SCOPE 0x01
#define MMIO_HUB_MEM_TLC_INFO_SIZE 32
#define MMIO_HUB_MEM_TLC_INFO_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_TLC_INFO_RESET 0x00000000
#define MMIO_HUB_MEM_TLC_INFO_DATA_LSB 0x0000
#define MMIO_HUB_MEM_TLC_INFO_DATA_MSB 0x001f
#define MMIO_HUB_MEM_TLC_INFO_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_TLC_INFO_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_TLC_INFO_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_FLAG
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_FLAG

/*  CVE_CLOCK_GATING_WAIT_CNT desc:  Clock gated enable wait counter */
/* */
union MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_t {
	struct {
uint32_t  WAIT_COUNT           :   6;
/*   How many clocks need to wait */
/* till gated clock is stable*/
uint32_t  RSVD_0               :  26;
/*  Nebulon auto filled RSVD [31:6] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_OFFSET 0x38
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_SIZE 32
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_RESET 0x0000001e
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_WAIT_COUNT_LSB 0x0000
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_WAIT_COUNT_MSB 0x0005
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_WAIT_COUNT_RANGE 0x0006
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_WAIT_COUNT_MASK 0x0000003f
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_WAIT_COUNT_RESET_VALUE 0x0000001e

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_FLAG
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_FLAG

/*  CVE_CLOCK_GATING_DISABLE desc:  Power Domain : CVE Gated Reset */
/* Domain : CVE Reset Function Domain : */

/*  CVE Clock Gating Disable Clock Gating Activation to each one of */
/* the */

/*  CVE units (CBB's), described in RTL_V/common/cv.vh enum {DSE=0, */
/* LMC, */

/*  FD, WINDOW, DELPHI, AXI, ATU3, ATU2, ATU1, ATU0, TNN, MBX, DEC400, */
/* */
/* SLMC, GECOE, GECOE2, DEEPSRAM, CVE_NUMBER_OF_GATED_CLKS}*/
union MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_t {
	struct {
uint32_t  GCLK_BLOCK           :  32;
/*   0: Clock Gating is enabled 1: */
/* Clock Gating is disabled*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_OFFSET 0x3c
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_SIZE 32
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_RESET 0x00000000
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_GCLK_BLOCK_LSB 0x0000
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_GCLK_BLOCK_MSB 0x001f
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_GCLK_BLOCK_RANGE 0x0020
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_GCLK_BLOCK_MASK 0xffffffff
#define MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_GCLK_BLOCK_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_FLAG
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_FLAG

/*  CVE_BREAK_NETWORK_CNTL desc:  Power Domain : CVE Gated Reset */
/* Domain : CVE Reset Function Domain : */
/* CVE BIST CVE Break Network*/
union MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_t {
	struct {
uint32_t  IVP_STOP_WITH_TLC    :   1;
/*   When Set , any break point */
/* reached by TLC core will force*/
/* IVP to stop its execution. If*/
/* not set, IVP execution will*/
/* continue independently of TLC*/
uint32_t  IVP_STOP_WITH_ASIP   :   1;
/*   When Set , any break point */
/* reached by the ASIP core will*/
/* force IVP to stop its*/
/* execution If not set, IVP*/
/* execution will continue*/
/* independently of the ASIP*/
uint32_t  ASIP_STOP_WITH_TLC   :   1;
/*   When Set , any break point */
/* reached by the TLC core will*/
/* force ASIP to stop its*/
/* execution If not set, TLC*/
/* execution will continue*/
/* independently of ASIP*/
uint32_t  ASIP_STOP_WITH_IVP   :   1;
/*   When Set , any break point */
/* reached by the IVP core will*/
/* force ASIP to stop its*/
/* execution If not set, ASIP*/
/* execution will continue*/
/* independently of IVP*/
uint32_t  TLC_STOP_WITH_IVP    :   1;
/*   When Set , any break point */
/* reached by the IVP core will*/
/* force TLC to stop its*/
/* execution If not set, TLC*/
/* execution will continue*/
/* independently of IVP*/
uint32_t  TLC_STOP_WITH_ASIP   :   1;
/*   When Set , any break point */
/* reached by the ASIP core will*/
/* force TLC to stop its*/
/* execution If not set, TLC*/
/* execution will continue*/
/* independently of ASIP*/
uint32_t  RSVD_0               :   2;
/*  Nebulon auto filled RSVD [7:6] */
uint32_t  IVP_TRACE_STOP_WITH_TLC :   1;
/*   When Set , trace start/stop */
/* point reached by TLC core will*/
/* force trace start/stop on IVP.*/
/* If not set, IVP trace*/
/* execution will continue*/
/* independently of TLC*/
uint32_t  IVP_TRACE_STOP_WITH_ASIP :   1;
/*   When Set , trace start/stop */
/* point reached by ASIP core*/
/* will force trace start/stop on*/
/* IVP. If not set, IVP trace*/
/* execution will continue*/
/* independently of ASIP*/
uint32_t  ASIP_TRACE_STOP_WITH_TLC :   1;
/*   When Set , trace start/stop */
/* point reached by TLC core will*/
/* force trace start/stop on*/
/* ASIP. If not set, ASIP trace*/
/* execution will continue*/
/* independently of TLC*/
uint32_t  ASIP_TRACE_STOP_WITH_IVP :   1;
/*   When Set , trace start/stop */
/* point reached by IVP core will*/
/* force trace start/stop on*/
/* ASIP. If not set, ASIP trace*/
/* execution will continue*/
/* independently of IVP*/
uint32_t  TLC_TRACE_STOP_WITH_IVP :   1;
/*   When Set , trace start/stop */
/* point reached by IVP core will*/
/* force trace start/stop on TLC.*/
/* If not set, TLC trace*/
/* execution will continue*/
/* independently of IVP*/
uint32_t  TLC_TRACE_STOP_WITH_ASIP :   1;
/*   When Set , trace start/stop */
/* point reached by ASIP core*/
/* will force trace start/stop on*/
/* TLC. If not set, TLC trace*/
/* execution will continue*/
/* independently of ASIP*/
uint32_t  RSVD_1               :  18;
/*  Nebulon auto filled RSVD [31:14] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_OFFSET 0x40
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_SIZE 32
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_BITFIELD_COUNT 0x0c
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_RESET 0x00003f3f
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_TLC_LSB 0x0000
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_TLC_MSB 0x0000
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_TLC_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_TLC_MASK 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_TLC_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_ASIP_LSB 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_ASIP_MSB 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_ASIP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_ASIP_MASK 0x00000002
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_STOP_WITH_ASIP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_TLC_LSB 0x0002
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_TLC_MSB 0x0002
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_TLC_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_TLC_MASK 0x00000004
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_TLC_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_IVP_LSB 0x0003
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_IVP_MSB 0x0003
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_IVP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_IVP_MASK 0x00000008
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_STOP_WITH_IVP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_IVP_LSB 0x0004
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_IVP_MSB 0x0004
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_IVP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_IVP_MASK 0x00000010
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_IVP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_ASIP_LSB 0x0005
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_ASIP_MSB 0x0005
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_ASIP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_ASIP_MASK 0x00000020
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_STOP_WITH_ASIP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_TLC_LSB 0x0008
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_TLC_MSB 0x0008
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_TLC_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_TLC_MASK 0x00000100
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_TLC_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_ASIP_LSB 0x0009
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_ASIP_MSB 0x0009
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_ASIP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_ASIP_MASK 0x00000200
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_IVP_TRACE_STOP_WITH_ASIP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_TLC_LSB 0x000a
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_TLC_MSB 0x000a
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_TLC_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_TLC_MASK 0x00000400
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_TLC_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_IVP_LSB 0x000b
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_IVP_MSB 0x000b
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_IVP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_IVP_MASK 0x00000800
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_ASIP_TRACE_STOP_WITH_IVP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_IVP_LSB 0x000c
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_IVP_MSB 0x000c
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_IVP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_IVP_MASK 0x00001000
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_IVP_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_ASIP_LSB 0x000d
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_ASIP_MSB 0x000d
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_ASIP_RANGE 0x0001
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_ASIP_MASK 0x00002000
#define MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_TLC_TRACE_STOP_WITH_ASIP_RESET_VALUE 0x00000001

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_DTF_CONTROL_FLAG
#define MMIO_HUB_MEM_DTF_CONTROL_FLAG
/* DTF_CONTROL desc:  DTF Control*/
union MMIO_HUB_MEM_DTF_CONTROL_t {
	struct {
uint32_t  DTF_ON               :   1;    /*  DTF On*/
uint32_t  DTF_HEADER_PACK_MODE :   1;
/*   When this is 'true' only */
/* headers of messages (32bits)*/
/* are sent on the DTF, each 4*/
/* headers are packed into one*/
/* 128 bit message*/
uint32_t  DTF_FILTER_AND_MODE  :   1;
/*   When this is 'true' messages */
/* are filtered if both their Src*/
/* & Dst CBBs filter bits are on*/
uint32_t  DTF_VTUNE_MODE       :   1;
/*   When this is 'true' CBB */
/* bridges will send the special*/
/* debug messages each time*/
/* execution starts/ends*/
uint32_t  RSVD_0               :   4;
/*  Nebulon auto filled RSVD [7:4] */
uint32_t  DTF_WAIT_CYCLES      :   8;
/*   Max number of cycles */
/* (timeout) to wait for the next*/
/* message in pack mode before*/
/* sending out the 128 bit*/
/* message*/
uint32_t  RSVD_1               :  16;
/*  Nebulon auto filled RSVD [31:16] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_DTF_CONTROL_OFFSET 0x44
#define MMIO_HUB_MEM_DTF_CONTROL_SCOPE 0x01
#define MMIO_HUB_MEM_DTF_CONTROL_SIZE 32
#define MMIO_HUB_MEM_DTF_CONTROL_BITFIELD_COUNT 0x05
#define MMIO_HUB_MEM_DTF_CONTROL_RESET 0x00000001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_ON_LSB 0x0000
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_ON_MSB 0x0000
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_ON_RANGE 0x0001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_ON_MASK 0x00000001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_ON_RESET_VALUE 0x00000001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_HEADER_PACK_MODE_LSB 0x0001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_HEADER_PACK_MODE_MSB 0x0001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_HEADER_PACK_MODE_RANGE 0x0001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_HEADER_PACK_MODE_MASK 0x00000002
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_HEADER_PACK_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_FILTER_AND_MODE_LSB 0x0002
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_FILTER_AND_MODE_MSB 0x0002
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_FILTER_AND_MODE_RANGE 0x0001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_FILTER_AND_MODE_MASK 0x00000004
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_FILTER_AND_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_VTUNE_MODE_LSB 0x0003
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_VTUNE_MODE_MSB 0x0003
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_VTUNE_MODE_RANGE 0x0001
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_VTUNE_MODE_MASK 0x00000008
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_VTUNE_MODE_RESET_VALUE 0x00000000
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_WAIT_CYCLES_LSB 0x0008
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_WAIT_CYCLES_MSB 0x000f
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_WAIT_CYCLES_RANGE 0x0008
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_WAIT_CYCLES_MASK 0x0000ff00
#define MMIO_HUB_MEM_DTF_CONTROL_DTF_WAIT_CYCLES_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_DTF_SRC_FILTER_FLAG
#define MMIO_HUB_MEM_DTF_SRC_FILTER_FLAG
/* DTF_SRC_FILTER desc:  Filter bits for source CBBs*/
union MMIO_HUB_MEM_DTF_SRC_FILTER_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_DTF_SRC_FILTER_OFFSET 0x48
#define MMIO_HUB_MEM_DTF_SRC_FILTER_SCOPE 0x01
#define MMIO_HUB_MEM_DTF_SRC_FILTER_SIZE 32
#define MMIO_HUB_MEM_DTF_SRC_FILTER_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_DTF_SRC_FILTER_RESET 0x00000000
#define MMIO_HUB_MEM_DTF_SRC_FILTER_DATA_LSB 0x0000
#define MMIO_HUB_MEM_DTF_SRC_FILTER_DATA_MSB 0x001f
#define MMIO_HUB_MEM_DTF_SRC_FILTER_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_DTF_SRC_FILTER_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_DTF_SRC_FILTER_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_DTF_DST_FILTER_FLAG
#define MMIO_HUB_MEM_DTF_DST_FILTER_FLAG
/* DTF_DST_FILTER desc:  Filter bits for destination CBBs*/
union MMIO_HUB_MEM_DTF_DST_FILTER_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_DTF_DST_FILTER_OFFSET 0x50
#define MMIO_HUB_MEM_DTF_DST_FILTER_SCOPE 0x01
#define MMIO_HUB_MEM_DTF_DST_FILTER_SIZE 32
#define MMIO_HUB_MEM_DTF_DST_FILTER_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_DTF_DST_FILTER_RESET 0x00000000
#define MMIO_HUB_MEM_DTF_DST_FILTER_DATA_LSB 0x0000
#define MMIO_HUB_MEM_DTF_DST_FILTER_DATA_MSB 0x001f
#define MMIO_HUB_MEM_DTF_DST_FILTER_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_DTF_DST_FILTER_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_DTF_DST_FILTER_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_MMIO_CNC_READ_WD_FLAG
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_FLAG

/*  MMIO_CNC_READ_WD desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Functional The register sets the cnc read watchdog parameters */
/* */
union MMIO_HUB_MEM_MMIO_CNC_READ_WD_t {
	struct {
uint32_t  DELAY                :  31;
/*   Set the watchdog delay in cve */
/* clocks*/
uint32_t  ENABLE               :   1;
/*   Writing '1' Enables the CNC */
/* Read Watchdog*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_OFFSET 0x58
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_SCOPE 0x01
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_SIZE 32
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_BITFIELD_COUNT 0x02
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_RESET 0x800003e8
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_DELAY_LSB 0x0000
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_DELAY_MSB 0x001e
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_DELAY_RANGE 0x001f
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_DELAY_MASK 0x7fffffff
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_DELAY_RESET_VALUE 0x000003e8
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_ENABLE_LSB 0x001f
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_ENABLE_MSB 0x001f
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_ENABLE_RANGE 0x0001
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_ENABLE_MASK 0x80000000
#define MMIO_HUB_MEM_MMIO_CNC_READ_WD_ENABLE_RESET_VALUE 0x00000001

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_FLAG
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_FLAG

/*  GENERAL_PURPOSE_REGS desc:  Power Domain : CVE Gated Reset Domain */
/* : CVE Reset Function Domain : */
/* CVE General General pourpose MMIO RW registers*/
union MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_OFFSET 0x5c
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_SCOPE 0x01
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_SIZE 32
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_RESET 0x00000000
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_DATA_LSB 0x0000
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_DATA_MSB 0x001f
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_TLC_MAILBOX_FLAG
#define MMIO_HUB_MEM_TLC_MAILBOX_FLAG

/*  TLC_MAILBOX desc:  Power Domain : CVE Gated Reset Domain : CVE */
/* Reset Function Domain : */
/* CVE General General pourpose MMIO RW registers*/
union MMIO_HUB_MEM_TLC_MAILBOX_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_TLC_MAILBOX_OFFSET 0xdc
#define MMIO_HUB_MEM_TLC_MAILBOX_SCOPE 0x01
#define MMIO_HUB_MEM_TLC_MAILBOX_SIZE 32
#define MMIO_HUB_MEM_TLC_MAILBOX_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_TLC_MAILBOX_RESET 0x00000000
#define MMIO_HUB_MEM_TLC_MAILBOX_DATA_LSB 0x0000
#define MMIO_HUB_MEM_TLC_MAILBOX_DATA_MSB 0x001f
#define MMIO_HUB_MEM_TLC_MAILBOX_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_TLC_MAILBOX_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_TLC_MAILBOX_DATA_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_GPO_FLAG
#define MMIO_HUB_MEM_CVE_GPO_FLAG

/*  CVE_GPO desc:  Power Domain : CVE Gated Reset Domain : CVE Reset */
/* Function Domain : */
/* CVE Functional CVE General Purpose Output*/
union MMIO_HUB_MEM_CVE_GPO_t {
	struct {
uint32_t  GPO                  :   8;
/*   General Purpose Output */
uint32_t  RSVD_0               :  24;
/*  Nebulon auto filled RSVD [31:8] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_GPO_OFFSET 0xec
#define MMIO_HUB_MEM_CVE_GPO_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_GPO_SIZE 32
#define MMIO_HUB_MEM_CVE_GPO_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_GPO_RESET 0x00000000
#define MMIO_HUB_MEM_CVE_GPO_GPO_LSB 0x0000
#define MMIO_HUB_MEM_CVE_GPO_GPO_MSB 0x0007
#define MMIO_HUB_MEM_CVE_GPO_GPO_RANGE 0x0008
#define MMIO_HUB_MEM_CVE_GPO_GPO_MASK 0x000000ff
#define MMIO_HUB_MEM_CVE_GPO_GPO_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_WATCHDOG_INIT_FLAG
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_FLAG

/*  CVE_WATCHDOG_INIT desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */
/* CVE Initialization CVE Internal Watchdog Counter Init*/
union MMIO_HUB_MEM_CVE_WATCHDOG_INIT_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_OFFSET 0xf0
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_SIZE 32
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_RESET 0xffffffff
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_DATA_LSB 0x0000
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_DATA_MSB 0x001f
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_CVE_WATCHDOG_INIT_DATA_RESET_VALUE 0xffffffff

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_FLAG
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_FLAG

/*  CVE_SECONDARY_WATCHDOG_INIT desc:  Power Domain : CVE Gated Reset */
/* Domain : CVE Reset Function Domain : */

/*  CVE Initialization CVE Secondary Internal Watchdog Counter Init */
/* */
union MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_OFFSET 0xf4
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_SIZE 32
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_RESET 0xffffffff
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_DATA_LSB 0x0000
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_DATA_MSB 0x001f
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_DATA_RESET_VALUE 0xffffffff

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_FLAG
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_FLAG

/*  CVE_CNC_WATCHDOG_INIT desc:  Power Domain : CVE Gated Reset Domain */
/* : CVE Reset Function Domain : */
/* CVE Initialization CVE Internal CnC Watchdog Counter Init*/
union MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_t {
	struct {
uint32_t  data                 :  32;    /*  32 bit RW field*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_OFFSET 0xf8
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_SIZE 32
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_RESET 0xffffffff
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_DATA_LSB 0x0000
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_DATA_MSB 0x001f
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_DATA_RANGE 0x0020
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_DATA_MASK 0xffffffff
#define MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_DATA_RESET_VALUE 0xffffffff

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_CVE_ID_FLAG
#define MMIO_HUB_MEM_CVE_ID_FLAG

/*  CVE_ID desc:  Power Domain : CVE Gated Reset Domain : CVE Reset */
/* Function Domain : */

/*  CVE Info hw: a read-only register. the HW writes the CVE ID in it */
/* */
union MMIO_HUB_MEM_CVE_ID_t {
	struct {
uint32_t  CVE_ID               :   4;    /*  CVE ID*/
uint32_t  RSVD_0               :  28;
/*  Nebulon auto filled RSVD [31:4] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_CVE_ID_OFFSET 0xfc
#define MMIO_HUB_MEM_CVE_ID_SCOPE 0x01
#define MMIO_HUB_MEM_CVE_ID_SIZE 32
#define MMIO_HUB_MEM_CVE_ID_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_CVE_ID_RESET 0x0000000f
#define MMIO_HUB_MEM_CVE_ID_CVE_ID_LSB 0x0000
#define MMIO_HUB_MEM_CVE_ID_CVE_ID_MSB 0x0003
#define MMIO_HUB_MEM_CVE_ID_CVE_ID_RANGE 0x0004
#define MMIO_HUB_MEM_CVE_ID_CVE_ID_MASK 0x0000000f
#define MMIO_HUB_MEM_CVE_ID_CVE_ID_RESET_VALUE 0x0000000f

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_HOST2TLC_INTERRUPT_FLAG
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_FLAG

/*  HOST2TLC_INTERRUPT desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Functional Host writes to this register to activate a 1-cycle */
/* */
/* pulse interrupt going directly to TLC*/
union MMIO_HUB_MEM_HOST2TLC_INTERRUPT_t {
	struct {
uint32_t  HOST2TLC_INT         :   1;
/*   Host activates interrupt to */
/* TLC*/
uint32_t  RSVD_0               :  31;
/*  Nebulon auto filled RSVD [31:1] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_OFFSET 0x00
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_SCOPE 0x01
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_SIZE 32
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_RESET 0x00000000
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_HOST2TLC_INT_LSB 0x0000
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_HOST2TLC_INT_MSB 0x0000
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_HOST2TLC_INT_RANGE 0x0001
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_HOST2TLC_INT_MASK 0x00000001
#define MMIO_HUB_MEM_HOST2TLC_INTERRUPT_HOST2TLC_INT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_FLAG
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_FLAG

/*  HOST2ASIP_INTERRUPT desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Functional Host writes to this register to activate a 1-cycle */
/* */
/* pulse interrupt going directly to ASIP*/
union MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_t {
	struct {
uint32_t  HOST2ASIP0_INT       :   1;
/*   Host activates interrupt to */
/* ASIP0*/
uint32_t  RSVD_0               :  31;
/*  Nebulon auto filled RSVD [31:1] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_OFFSET 0x04
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_SCOPE 0x01
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_SIZE 32
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_RESET 0x00000000
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_HOST2ASIP0_INT_LSB 0x0000
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_HOST2ASIP0_INT_MSB 0x0000
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_HOST2ASIP0_INT_RANGE 0x0001
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_HOST2ASIP0_INT_MASK 0x00000001
#define MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_HOST2ASIP0_INT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_HOST2IVP_INTERRUPT_FLAG
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_FLAG

/*  HOST2IVP_INTERRUPT desc:  Power Domain : CVE Gated Reset Domain : */
/* CVE Reset Function Domain : */

/*  CVE Functional Host writes to this register to activate a 1-cycle */
/* */
/* pulse interrupt going directly to IVP*/
union MMIO_HUB_MEM_HOST2IVP_INTERRUPT_t {
	struct {
uint32_t  HOST2IVP_INT         :   1;
/*   Host activates interrupt to */
/* IVP*/
uint32_t  RSVD_0               :  31;
/*  Nebulon auto filled RSVD [31:1] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_OFFSET 0x08
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_SCOPE 0x01
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_SIZE 32
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_RESET 0x00000000
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_HOST2IVP_INT_LSB 0x0000
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_HOST2IVP_INT_MSB 0x0000
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_HOST2IVP_INT_RANGE 0x0001
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_HOST2IVP_INT_MASK 0x00000001
#define MMIO_HUB_MEM_HOST2IVP_INTERRUPT_HOST2IVP_INT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_MMIO_NOTIFICATION_FLAG
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_FLAG

/*  MMIO_NOTIFICATION desc:  Inter ICE communication messaging. Clear */
/* on Read. */
union MMIO_HUB_MEM_MMIO_NOTIFICATION_t {
	struct {
uint32_t  NOTIFICATIONS        :  32;    /*  Notification*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_OFFSET 0x0c
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_SCOPE 0x01
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_SIZE 32
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_RESET 0x00000000
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_NOTIFICATIONS_LSB 0x0000
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_NOTIFICATIONS_MSB 0x001f
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_NOTIFICATIONS_RANGE 0x0020
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_NOTIFICATIONS_MASK 0xffffffff
#define MMIO_HUB_MEM_MMIO_NOTIFICATION_NOTIFICATIONS_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PARITY_LOW_ERR_FLAG
#define MMIO_HUB_MEM_PARITY_LOW_ERR_FLAG

/*  PARITY_LOW_ERR desc:  describe the parity errors inside the IP */
union MMIO_HUB_MEM_PARITY_LOW_ERR_t {
	struct {
uint32_t  PAR_ERR_LOW          :  32;
/*   Describe the parity Errors */
/* low part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PARITY_LOW_ERR_OFFSET 0x10
#define MMIO_HUB_MEM_PARITY_LOW_ERR_SCOPE 0x01
#define MMIO_HUB_MEM_PARITY_LOW_ERR_SIZE 32
#define MMIO_HUB_MEM_PARITY_LOW_ERR_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_PARITY_LOW_ERR_RESET 0x00000000
#define MMIO_HUB_MEM_PARITY_LOW_ERR_PAR_ERR_LOW_LSB 0x0000
#define MMIO_HUB_MEM_PARITY_LOW_ERR_PAR_ERR_LOW_MSB 0x001f
#define MMIO_HUB_MEM_PARITY_LOW_ERR_PAR_ERR_LOW_RANGE 0x0020
#define MMIO_HUB_MEM_PARITY_LOW_ERR_PAR_ERR_LOW_MASK 0xffffffff
#define MMIO_HUB_MEM_PARITY_LOW_ERR_PAR_ERR_LOW_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PARITY_HIGH_ERR_FLAG
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_FLAG

/*  PARITY_HIGH_ERR desc:  describe the parity errors inside the IP */
/* */
union MMIO_HUB_MEM_PARITY_HIGH_ERR_t {
	struct {
uint32_t  PAR_ERR_HIGH         :  32;
/*   Describe the parity Errors */
/* High part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_OFFSET 0x14
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_SCOPE 0x01
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_SIZE 32
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_RESET 0x00000000
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_PAR_ERR_HIGH_LSB 0x0000
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_PAR_ERR_HIGH_MSB 0x001f
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_PAR_ERR_HIGH_RANGE 0x0020
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_PAR_ERR_HIGH_MASK 0xffffffff
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_PAR_ERR_HIGH_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_FLAG
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_FLAG
/* PARITY_LOW_ERR_MASK desc:  mask parity errors inside the IP*/
union MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_t {
	struct {
uint32_t  PAR_ERR_LOW_MASK     :  32;
/*   Mask the parity Errors low */
/* part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_OFFSET 0x18
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_SCOPE 0x01
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_SIZE 32
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_RESET 0x00000000
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_PAR_ERR_LOW_MASK_LSB 0x0000
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_PAR_ERR_LOW_MASK_MSB 0x001f
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_PAR_ERR_LOW_MASK_RANGE 0x0020
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_PAR_ERR_LOW_MASK_MASK 0xffffffff
#define MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_PAR_ERR_LOW_MASK_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_FLAG
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_FLAG
/* PARITY_HIGH_ERR_MASK desc:  mask parity errors inside the IP*/
union MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_t {
	struct {
uint32_t  PAR_ERR_HIGH_MASK    :  32;
/*   Mask the parity Errors high */
/* part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_OFFSET 0x1c
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_SCOPE 0x01
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_SIZE 32
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_RESET 0x00000000
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_PAR_ERR_HIGH_MASK_LSB 0x0000
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_PAR_ERR_HIGH_MASK_MSB 0x001f
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_PAR_ERR_HIGH_MASK_RANGE 0x0020
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_PAR_ERR_HIGH_MASK_MASK 0xffffffff
#define MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_PAR_ERR_HIGH_MASK_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_PARITY_ERRCOUNT_FLAG
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_FLAG

/*  PARITY_ERRCOUNT desc:  Counts the number of parity errors inside */
/* the IP */
union MMIO_HUB_MEM_PARITY_ERRCOUNT_t {
	struct {
uint32_t  PAR_ERR_COUNT        :  32;
/*   Counts the parity Errors High */
/* part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_OFFSET 0x20
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_SCOPE 0x01
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_SIZE 32
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_RESET 0x00000000
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_PAR_ERR_COUNT_LSB 0x0000
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_PAR_ERR_COUNT_MSB 0x001f
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_PAR_ERR_COUNT_RANGE 0x0020
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_PAR_ERR_COUNT_MASK 0xffffffff
#define MMIO_HUB_MEM_PARITY_ERRCOUNT_PAR_ERR_COUNT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_ECC_SERRCOUNT_FLAG
#define MMIO_HUB_MEM_ECC_SERRCOUNT_FLAG

/*  ECC_SERRCOUNT desc:  Counts the mumber of parity ECC single errors */
/* in the DSRAM */
union MMIO_HUB_MEM_ECC_SERRCOUNT_t {
	struct {
uint32_t  ECC_SERR_COUNT       :  32;
/*   Counts the single ECC Errors */
/* High part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_ECC_SERRCOUNT_OFFSET 0x24
#define MMIO_HUB_MEM_ECC_SERRCOUNT_SCOPE 0x01
#define MMIO_HUB_MEM_ECC_SERRCOUNT_SIZE 32
#define MMIO_HUB_MEM_ECC_SERRCOUNT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_ECC_SERRCOUNT_RESET 0x00000000
#define MMIO_HUB_MEM_ECC_SERRCOUNT_ECC_SERR_COUNT_LSB 0x0000
#define MMIO_HUB_MEM_ECC_SERRCOUNT_ECC_SERR_COUNT_MSB 0x001f
#define MMIO_HUB_MEM_ECC_SERRCOUNT_ECC_SERR_COUNT_RANGE 0x0020
#define MMIO_HUB_MEM_ECC_SERRCOUNT_ECC_SERR_COUNT_MASK 0xffffffff
#define MMIO_HUB_MEM_ECC_SERRCOUNT_ECC_SERR_COUNT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_ECC_DERRCOUNT_FLAG
#define MMIO_HUB_MEM_ECC_DERRCOUNT_FLAG

/*  ECC_DERRCOUNT desc:  Counts the mumber of parity ECC double errors */
/* in the DSRAM */
union MMIO_HUB_MEM_ECC_DERRCOUNT_t {
	struct {
uint32_t  ECC_DERR_COUNT       :  32;
/*   Counts the double ECC Errors */
/* High part*/
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_ECC_DERRCOUNT_OFFSET 0x28
#define MMIO_HUB_MEM_ECC_DERRCOUNT_SCOPE 0x01
#define MMIO_HUB_MEM_ECC_DERRCOUNT_SIZE 32
#define MMIO_HUB_MEM_ECC_DERRCOUNT_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_ECC_DERRCOUNT_RESET 0x00000000
#define MMIO_HUB_MEM_ECC_DERRCOUNT_ECC_DERR_COUNT_LSB 0x0000
#define MMIO_HUB_MEM_ECC_DERRCOUNT_ECC_DERR_COUNT_MSB 0x001f
#define MMIO_HUB_MEM_ECC_DERRCOUNT_ECC_DERR_COUNT_RANGE 0x0020
#define MMIO_HUB_MEM_ECC_DERRCOUNT_ECC_DERR_COUNT_MASK 0xffffffff
#define MMIO_HUB_MEM_ECC_DERRCOUNT_ECC_DERR_COUNT_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
#ifndef MMIO_HUB_MEM_UNMAPPED_ERR_ID_FLAG
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_FLAG

/*  UNMAPPED_ERR_ID desc:  Stores the unmapped tid taht caused teh */
/* error */
union MMIO_HUB_MEM_UNMAPPED_ERR_ID_t {
	struct {
uint32_t  TID_ERR              :   4;
/*   last tid to cause an unmapped */
/* error*/
uint32_t  RSVD_0               :  28;
/*  Nebulon auto filled RSVD [31:4] */
	}                                field;
uint32_t                         val;
};
#endif
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_OFFSET 0x2c
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_SCOPE 0x01
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_SIZE 32
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_BITFIELD_COUNT 0x01
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_RESET 0x00000000
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_TID_ERR_LSB 0x0000
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_TID_ERR_MSB 0x0003
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_TID_ERR_RANGE 0x0004
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_TID_ERR_MASK 0x0000000f
#define MMIO_HUB_MEM_UNMAPPED_ERR_ID_TID_ERR_RESET_VALUE 0x00000000

/*  ------------------------------------------------------------------ */
/* */
/* starting the array instantiation section*/
struct mmio_hub_t {
union MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS_t COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS;
/*  offset 4'h0, width 32 */
union MMIO_HUB_MEM_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR_t COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR;
/*  offset 4'h4, width 32 */
union MMIO_HUB_MEM_NEW_COMMAND_BUFFER_DOOR_BELL_t NEW_COMMAND_BUFFER_DOOR_BELL;
/*  offset 4'h8, width 32 */
union MMIO_HUB_MEM_STOP_TLC_DOOR_BELL_t STOP_TLC_DOOR_BELL;
/*  offset 8'h0C, width 32 */
union MMIO_HUB_MEM_GENERAL_PURPOSE_DOORBELL_t GENERAL_PURPOSE_DOORBELL[4];
/*  offset 8'h10, width 32 */
	uint8_t	                   rsvd0[224];
union MMIO_HUB_MEM_HW_REVISION_t HW_REVISION;
/*  offset 12'h100, width 32 */
union MMIO_HUB_MEM_INTERRUPT_MASK_t INTERRUPT_MASK;
/*  offset 12'h104, width 32 */
union MMIO_HUB_MEM_INTERRUPT_STATUS_t INTERRUPT_STATUS;
/*  offset 12'h108, width 32 */
union MMIO_HUB_MEM_INTERRUPT_STATUS_SHADOW_t INTERRUPT_STATUS_SHADOW;
/*  offset 12'h10C, width 32 */
union MMIO_HUB_MEM_TLC_WR_PULSE_t TLC_WR_PULSE;
/*  offset 12'h110, width 32 */
union MMIO_HUB_MEM_P_WAIT_MODE_t P_WAIT_MODE;
/*  offset 12'h114, width 32 */
union MMIO_HUB_MEM_DEEPSRAM_CONFIG_t DEEPSRAM_CONFIG;
/*  offset 12'h118, width 32 */
union MMIO_HUB_MEM_DEEPSRAM_CLEAR_t DEEPSRAM_CLEAR;
/*  offset 12'h11C, width 32 */
union MMIO_HUB_MEM_CVE_CONFIG_t  CVE_CONFIG;
/*  offset 12'h120, width 32 */
union MMIO_HUB_MEM_PRE_IDLE_DELAY_COUNT_t PRE_IDLE_DELAY_COUNT;
/*  offset 12'h124, width 32 */
union MMIO_HUB_MEM_CBB_ERROR_CODE_t CBB_ERROR_CODE;
/*  offset 12'h128, width 32 */
union MMIO_HUB_MEM_CBB_ERROR_INFO_t CBB_ERROR_INFO;
/*  offset 12'h12C, width 32 */
union MMIO_HUB_MEM_PROG_CORES_CONTROL_t PROG_CORES_CONTROL;
/*  offset 12'h130, width 32 */
union MMIO_HUB_MEM_TLC_INFO_t    TLC_INFO;
/*  offset 12'h134, width 32 */
union MMIO_HUB_MEM_CVE_CLOCK_GATING_WAIT_CNT_t CVE_CLOCK_GATING_WAIT_CNT;
/*  offset 12'h138, width 32 */
union MMIO_HUB_MEM_CVE_CLOCK_GATING_DISABLE_t CVE_CLOCK_GATING_DISABLE;
/*  offset 12'h13C, width 32 */
union MMIO_HUB_MEM_CVE_BREAK_NETWORK_CNTL_t CVE_BREAK_NETWORK_CNTL;
/*  offset 12'h140, width 32 */
union MMIO_HUB_MEM_DTF_CONTROL_t DTF_CONTROL;
/*  offset 12'h144, width 32 */
union MMIO_HUB_MEM_DTF_SRC_FILTER_t DTF_SRC_FILTER[2];
/*  offset 12'h148, width 32 */
union MMIO_HUB_MEM_DTF_DST_FILTER_t DTF_DST_FILTER[2];
/*  offset 12'h150, width 32 */
union MMIO_HUB_MEM_MMIO_CNC_READ_WD_t MMIO_CNC_READ_WD;
/*  offset 12'h158, width 32 */
union MMIO_HUB_MEM_GENERAL_PURPOSE_REGS_t GENERAL_PURPOSE_REGS[32];
/*  offset 12'h15C, width 32 */
union MMIO_HUB_MEM_TLC_MAILBOX_t TLC_MAILBOX[4];
/*  offset 12'h1DC, width 32 */
union MMIO_HUB_MEM_CVE_GPO_t     CVE_GPO;
/*  offset 12'h1EC, width 32 */
union MMIO_HUB_MEM_CVE_WATCHDOG_INIT_t CVE_WATCHDOG_INIT;
/*  offset 12'h1F0, width 32 */
union MMIO_HUB_MEM_CVE_SECONDARY_WATCHDOG_INIT_t CVE_SECONDARY_WATCHDOG_INIT;
/*  offset 12'h1F4, width 32 */
union MMIO_HUB_MEM_CVE_CNC_WATCHDOG_INIT_t CVE_CNC_WATCHDOG_INIT;
/*  offset 12'h1F8, width 32 */
union MMIO_HUB_MEM_CVE_ID_t      CVE_ID;
/*  offset 12'h1FC, width 32 */
union MMIO_HUB_MEM_HOST2TLC_INTERRUPT_t HOST2TLC_INTERRUPT;
/*  offset 12'h200, width 32 */
union MMIO_HUB_MEM_HOST2ASIP_INTERRUPT_t HOST2ASIP_INTERRUPT;
/*  offset 12'h204, width 32 */
union MMIO_HUB_MEM_HOST2IVP_INTERRUPT_t HOST2IVP_INTERRUPT;
/*  offset 12'h208, width 32 */
union MMIO_HUB_MEM_MMIO_NOTIFICATION_t MMIO_NOTIFICATION;
/*  offset 12'h20C, width 32 */
union MMIO_HUB_MEM_PARITY_LOW_ERR_t PARITY_LOW_ERR;
/*  offset 12'h210, width 32 */
union MMIO_HUB_MEM_PARITY_HIGH_ERR_t PARITY_HIGH_ERR;
/*  offset 12'h214, width 32 */
union MMIO_HUB_MEM_PARITY_LOW_ERR_MASK_t PARITY_LOW_ERR_MASK;
/*  offset 12'h218, width 32 */
union MMIO_HUB_MEM_PARITY_HIGH_ERR_MASK_t PARITY_HIGH_ERR_MASK;
/*  offset 12'h21C, width 32 */
union MMIO_HUB_MEM_PARITY_ERRCOUNT_t PARITY_ERRCOUNT;
/*  offset 12'h220, width 32 */
union MMIO_HUB_MEM_ECC_SERRCOUNT_t ECC_SERRCOUNT;
/*  offset 12'h224, width 32 */
union MMIO_HUB_MEM_ECC_DERRCOUNT_t ECC_DERRCOUNT;
/*  offset 12'h228, width 32 */
union MMIO_HUB_MEM_UNMAPPED_ERR_ID_t UNMAPPED_ERR_ID;
/*  offset 12'h22C, width 32 */
};

#define CVE_MMIO_COMMAND_BUFFER_DESCRIPTORS_BASE_ADDRESS       0
#define CVE_MMIO_COMMAND_BUFFER_DESCRIPTORS_ENTRIES_NR         1
#define CVE_MMIO_NEW_COMMAND_BUFFER_DOOR_BELL                  2
#define CVE_MMIO_STOP_TLC_DOOR_BELL                            3
#define CVE_MMIO_GENERAL_PURPOSE_DOORBELL                      4
#define CVE_MMIO_HW_REVISION                                  64
#define CVE_MMIO_INTERRUPT_MASK                               65
#define CVE_MMIO_INTERRUPT_STATUS                             66
#define CVE_MMIO_INTERRUPT_STATUS_SHADOW                      67
#define CVE_MMIO_TLC_WR_PULSE                                 68
#define CVE_MMIO_P_WAIT_MODE                                  69
#define CVE_MMIO_DEEPSRAM_CONFIG                              70
#define CVE_MMIO_DEEPSRAM_CLEAR                               71
#define CVE_MMIO_CVE_CONFIG                                   72
#define CVE_MMIO_PRE_IDLE_DELAY_COUNT                         73
#define CVE_MMIO_CBB_ERROR_CODE                               74
#define CVE_MMIO_CBB_ERROR_INFO                               75
#define CVE_MMIO_PROG_CORES_CONTROL                           76
#define CVE_MMIO_TLC_INFO                                     77
#define CVE_MMIO_CVE_CLOCK_GATING_WAIT_CNT                    78
#define CVE_MMIO_CVE_CLOCK_GATING_DISABLE                     79
#define CVE_MMIO_CVE_BREAK_NETWORK_CNTL                       80
#define CVE_MMIO_DTF_CONTROL                                  81
#define CVE_MMIO_DTF_SRC_FILTER                               82
#define CVE_MMIO_DTF_DST_FILTER                               84
#define CVE_MMIO_MMIO_CNC_READ_WD                             86
#define CVE_MMIO_GENERAL_PURPOSE_REGS                         87
#define CVE_MMIO_TLC_MAILBOX                                 119
#define CVE_MMIO_CVE_GPO                                     123
#define CVE_MMIO_CVE_WATCHDOG_INIT                           124
#define CVE_MMIO_CVE_SECONDARY_WATCHDOG_INIT                 125
#define CVE_MMIO_CVE_CNC_WATCHDOG_INIT                       126
#define CVE_MMIO_CVE_ID                                      127
#define CVE_MMIO_HOST2TLC_INTERRUPT                          128
#define CVE_MMIO_HOST2ASIP_INTERRUPT                         129
#define CVE_MMIO_HOST2IVP_INTERRUPT                          130
#define CVE_MMIO_MMIO_NOTIFICATION                           131
#define CVE_MMIO_PARITY_LOW_ERR                              132
#define CVE_MMIO_PARITY_HIGH_ERR                             133
#define CVE_MMIO_PARITY_LOW_ERR_MASK                         134
#define CVE_MMIO_PARITY_HIGH_ERR_MASK                        135
#define CVE_MMIO_PARITY_ERRCOUNT                             136
#define CVE_MMIO_ECC_SERRCOUNT                               137
#define CVE_MMIO_ECC_DERRCOUNT                               138
#define CVE_MMIO_UNMAPPED_ERR_ID                             139

#endif // _MMIO_HUB_REGS_H_
